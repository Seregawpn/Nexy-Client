#!/usr/bin/env python3
"""
–ü–æ–¥–ø–∏—Å—å —Ñ–∞–π–ª–æ–≤ Ed25519 –∫–ª—é—á–æ–º
"""

import os
import sys
import base64
from nacl.signing import SigningKey
from nacl.encoding import Base64Encoder

def sign_file(file_path: str, private_key_path: str) -> str:
    """
    –ü–æ–¥–ø–∏—Å—å —Ñ–∞–π–ª–∞ Ed25519 –∫–ª—é—á–æ–º
    
    Args:
        file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
        private_key_path: –ü—É—Ç—å –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –∫–ª—é—á—É
        
    Returns:
        str: –ü–æ–¥–ø–∏—Å—å –≤ base64
    """
    
    # –ß–∏—Ç–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
    with open(private_key_path, 'r') as f:
        private_key_b64 = f.read().strip()
    
    private_key = SigningKey(private_key_b64, encoder=Base64Encoder)
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(file_path, 'rb') as f:
        file_data = f.read()
    
    # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º
    signature = private_key.sign(file_data)
    
    # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64
    signature_b64 = base64.b64encode(signature.signature).decode('utf-8')
    
    return signature_b64

def main():
    if len(sys.argv) != 3:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 sign_file.py <—Ñ–∞–π–ª> <–ø—Ä–∏–≤–∞—Ç–Ω—ã–π_–∫–ª—é—á>")
        sys.exit(1)
    
    file_path = sys.argv[1]
    private_key_path = sys.argv[2]
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        sys.exit(1)
    
    if not os.path.exists(private_key_path):
        print(f"‚ùå –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: {private_key_path}")
        sys.exit(1)
    
    try:
        signature = sign_file(file_path, private_key_path)
        print(f"‚úÖ –§–∞–π–ª –ø–æ–¥–ø–∏—Å–∞–Ω: {file_path}")
        print(f"üìù –ü–æ–¥–ø–∏—Å—å (base64): {signature}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∏: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
