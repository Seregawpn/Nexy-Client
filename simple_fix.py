#!/usr/bin/env python3
import re

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
with open('client/main.py', 'r', encoding='utf-8') as f:
    content = f.read()

# –ò—â–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º –±–ª–æ–∫–∏—Ä—É—é—â–∏–π —Ü–∏–∫–ª
old_pattern = r'while True:\s*# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 100ms\s*await asyncio\.sleep\(0\.1\)\s*# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å –ª–∏ –∞—É–¥–∏–æ\s*if self\.audio_player\.wait_for_queue_empty\(\):\s*logger\.info\(f"   üéµ –ê—É–¥–∏–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"\)\s*self\.console\.print\("\[green\]üéµ –ê—É–¥–∏–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ\[/green\]"\)\s*break\s*# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ª–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ\s*if not self\.audio_player\.is_playing:\s*logger\.info\(f"   üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ"\)\s*self\.console\.print\("\[yellow\]üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ\[/yellow\]"\)\s*break\s*# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–æ –ª–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è\s*if hasattr\(self, \'input_handler\'\) and self\.input_handler:\s*if self\.input_handler\.get_interrupt_status\(\):\s*logger\.info\(f"   üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∞—É–¥–∏–æ"\)\s*self\.console\.print\("\[red\]üö® –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∞—É–¥–∏–æ\[/red\]"\)\s*break'

new_code = '''# –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–¥–∏–Ω —Ä–∞–∑, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫
                    if self.audio_player.wait_for_queue_empty():
                        logger.info(f"   üéµ –ê—É–¥–∏–æ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
                        self.console.print("[green]üéµ –ê—É–¥–∏–æ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ[/green]")
                    else:
                        logger.info(f"   üéµ –ê—É–¥–∏–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –≤ —Ñ–æ–Ω–µ")
                        self.console.print("[blue]üéµ –ê—É–¥–∏–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –≤ —Ñ–æ–Ω–µ[/blue]")'''

# –ó–∞–º–µ–Ω—è–µ–º
new_content = re.sub(old_pattern, new_code, content, flags=re.DOTALL)

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º
with open('client/main.py', 'w', encoding='utf-8') as f:
    f.write(new_content)

print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ!")
