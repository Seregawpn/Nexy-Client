#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã –¥–ª—è AudioGenerator
"""

import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Å–µ—Ä–≤–µ—Ä—É –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))

from audio_generator import AudioGenerator


async def test_audio_generator():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç AudioGenerator
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º AudioGenerator...")
    
    try:
        generator = AudioGenerator()
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
        print("üìù –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
        audio = await generator.generate_audio("Hello, this is a test.")
        if audio is not None:
            print(f"‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω: {len(audio)} —Å—ç–º–ø–ª–æ–≤")
        else:
            print("‚ùå –¢–µ—Å—Ç 1 –ø—Ä–æ–≤–∞–ª–µ–Ω")
        
        # –¢–µ—Å—Ç 2: –ü–æ—Ç–æ–∫–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
        print("üìù –¢–µ—Å—Ç 2: –ü–æ—Ç–æ–∫–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
        text = "This is the first sentence. This is the second sentence. This is the third sentence."
        
        chunk_count = 0
        async for audio_chunk in generator.generate_streaming_audio(text):
            chunk_count += 1
            print(f"‚úÖ –ß–∞–Ω–∫ {chunk_count}: {len(audio_chunk)} —Å—ç–º–ø–ª–æ–≤")
        
        print(f"‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω: {chunk_count} —á–∞–Ω–∫–æ–≤")
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")


if __name__ == "__main__":
    asyncio.run(test_audio_generator())
