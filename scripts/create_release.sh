#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞ Nexy AI Assistant
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/create_release.sh [version] [message]
# –ü—Ä–∏–º–µ—Ä: ./scripts/create_release.sh v3.5.0 "VoiceOver integration completed"

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${BLUE}[RELEASE]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -lt 2 ]; then
    error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <version> <message>"
    echo "–ü—Ä–∏–º–µ—Ä: $0 v3.5.0 'VoiceOver integration completed'"
    exit 1
fi

VERSION=$1
MESSAGE=$2

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤–µ—Ä—Å–∏–∏ (semantic versioning)
if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: vX.Y.Z (–Ω–∞–ø—Ä–∏–º–µ—Ä, v3.5.0)"
fi

log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ $VERSION..."

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")/.."

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if [ ! -d ".git" ]; then
    error "–ù–µ –Ω–∞–π–¥–µ–Ω git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–µ—Ç –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
if [ -n "$(git status --porcelain)" ]; then
    error "–ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –∏—Ö:"
    git status --short
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ç–µ–≥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if git tag -l | grep -q "^$VERSION$"; then
    error "–¢–µ–≥ $VERSION —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –Ω–∞ main –≤–µ—Ç–∫–µ
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "main" ]; then
    warning "–í—ã –Ω–µ –Ω–∞ main –≤–µ—Ç–∫–µ (—Ç–µ–∫—É—â–∞—è: $CURRENT_BRANCH)"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞
log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞ $VERSION..."
git tag -a "$VERSION" -m "$MESSAGE"

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–≥–∞ –≤ GitHub
log "–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–≥–∞ –≤ GitHub..."
git push origin "$VERSION"

# –°–æ–∑–¥–∞–Ω–∏–µ GitHub Release —á–µ—Ä–µ–∑ GitHub CLI (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
if command -v gh &> /dev/null; then
    log "–°–æ–∑–¥–∞–Ω–∏–µ GitHub Release..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ release notes
    RELEASE_NOTES="## –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ $VERSION

$MESSAGE

### –ò–∑–º–µ–Ω–µ–Ω–∏—è:
$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞:
1. –°–∫–∞—á–∞–π—Ç–µ \`Nexy.pkg\` –∏–∑ Assets –Ω–∏–∂–µ
2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑ –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫
3. –†–∞–∑—Ä–µ—à–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤ System Preferences

### –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- macOS 12.0+
- –†–∞–∑—Ä–µ—à–µ–Ω–∏—è: Microphone, Screen Recording, Accessibility, VoiceOver"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞
    gh release create "$VERSION" \
        --title "Nexy AI Assistant $VERSION" \
        --notes "$RELEASE_NOTES" \
        --latest
    
    success "GitHub Release $VERSION —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
else
    warning "GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ª–∏–∑ –≤—Ä—É—á–Ω—É—é –Ω–∞ GitHub.com"
    echo "URL: https://github.com/$(git config --get remote.origin.url | sed 's/.*github.com[:/]\([^/]*\/[^/]*\)\.git/\1/')/releases/new?tag=$VERSION"
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ -f "client/config/unified_config.yaml" ]; then
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ –∫–æ–Ω—Ñ–∏–≥–µ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª–µ version)
    sed -i.bak "s/version: .*/version: $VERSION/" client/config/unified_config.yaml 2>/dev/null || true
    rm -f client/config/unified_config.yaml.bak
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤–µ—Ä—Å–∏–∏
echo "$VERSION" > VERSION
git add VERSION
git commit -m "chore: bump version to $VERSION" || true
git push origin main

success "–†–µ–ª–∏–∑ $VERSION —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
log "–¢–µ–≥: $VERSION"
log "–°–æ–æ–±—â–µ–Ω–∏–µ: $MESSAGE"
log "–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –°–æ–∑–¥–∞–π—Ç–µ PKG —Ñ–∞–π–ª –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∫ —Ä–µ–ª–∏–∑—É"

echo
echo "üì¶ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è PKG —Ñ–∞–π–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "   ./packaging/build_final.sh"
echo
echo "üîó –ó–∞—Ç–µ–º –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ PKG –∫ —Ä–µ–ª–∏–∑—É –Ω–∞ GitHub"
