#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ gRPC —Å–µ—Ä–≤–µ—Ä–∞
"""
import grpc
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ protobuf —Ñ–∞–π–ª–∞–º
sys.path.append('client')
sys.path.append('server')

try:
    import streaming_pb2
    import streaming_pb2_grpc
except ImportError:
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å protobuf —Ñ–∞–π–ª—ã")
    print("üîß –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã...")
    
    # –ò—â–µ–º protobuf —Ñ–∞–π–ª—ã
    import os
    for root, dirs, files in os.walk('.'):
        for file in files:
            if file.endswith('_pb2_grpc.py'):
                print(f"üìÅ –ù–∞–π–¥–µ–Ω: {os.path.join(root, file)}")
                sys.path.append(root)
    
    try:
        import streaming_pb2
        import streaming_pb2_grpc
        print("‚úÖ Protobuf —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    except ImportError as e:
        print(f"‚ùå –í—Å–µ –µ—â–µ –Ω–µ —É–¥–∞–µ—Ç—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å: {e}")
        sys.exit(1)

def test_server():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É"""
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É (–ø—Ä–æ–±—É–µ–º production —Å–µ—Ä–≤–µ—Ä)
        channel = grpc.insecure_channel('20.151.51.172:50051')
        stub = streaming_pb2_grpc.StreamingServiceStub(channel)
        
        print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        request = streaming_pb2.StreamRequest(
            prompt="–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
            screenshot="",  # –ü—É—Å—Ç–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∞
            screen_width=1920,
            screen_height=1080,
            hardware_id="test_client_123"
        )
        
        print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        response_stream = stub.StreamAudio(request)
        
        print("üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞...")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
        for response in response_stream:
            if response.text_chunk:
                print(f"üí¨ –¢–µ–∫—Å—Ç: {response.text_chunk}")
            
            if response.audio_chunk and response.audio_chunk.audio_data:
                print(f"üéµ –ê—É–¥–∏–æ: {len(response.audio_chunk.audio_data)} –±–∞–π—Ç")
            
            if response.end_message:
                print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ: {response.end_message}")
                break
            
            if response.error_message:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.error_message}")
                break
        
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except grpc.RpcError as e:
        print(f"‚ùå gRPC –æ—à–∏–±–∫–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_server()
