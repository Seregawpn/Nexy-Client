#!/usr/bin/env python3
"""
üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ü–†–ï–†–´–í–ê–ù–ò–Ø –†–ï–ß–ò
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –¥—É–±–ª–µ–π
"""

import asyncio
import time
from rich.console import Console

console = Console()

async def test_interrupt_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
    console.print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ü–†–ï–†–´–í–ê–ù–ò–Ø –†–ï–ß–ò")
    console.print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º StateManager
        from main import StateManager, AppState
        
        console.print("‚úÖ StateManager –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä (–±–µ–∑ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
        state_manager = StateManager.__new__(StateManager)
        state_manager._cancelled = False
        state_manager.state = AppState.SPEAKING
        
        console.print(f"‚úÖ StateManager —Å–æ–∑–¥–∞–Ω, —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state_manager.state.name}")
        
        # –¢–µ—Å—Ç 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞ –æ—Ç–º–µ–Ω—ã
        console.print("\nüîß –¢–µ—Å—Ç 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞ –æ—Ç–º–µ–Ω—ã...")
        state_manager._cancelled = True
        console.print(f"‚úÖ –§–ª–∞–≥ –æ—Ç–º–µ–Ω—ã: {state_manager._cancelled}")
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
        console.print("\nüîß –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è...")
        if hasattr(state_manager, '_cancelled') and state_manager._cancelled:
            console.print("‚úÖ –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–ª–∞–≥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            console.print("‚ùå –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–ª–∞–≥–∞ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è SPEAKING
        console.print("\nüîß –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è SPEAKING...")
        if state_manager.state == AppState.SPEAKING:
            console.print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ SPEAKING –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ")
        else:
            console.print("‚ùå –°–æ—Å—Ç–æ—è–Ω–∏–µ SPEAKING –ù–ï –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
        console.print("\nüîß –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤...")
        methods = ['_force_interrupt_all', '_interrupt_audio', '_cancel_tasks']
        for method in methods:
            if hasattr(state_manager, method):
                console.print(f"‚úÖ –ú–µ—Ç–æ–¥ {method} –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                console.print(f"‚ùå –ú–µ—Ç–æ–¥ {method} –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω")
        
        console.print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        console.print("‚úÖ –õ–æ–≥–∏–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
        console.print("‚úÖ –î—É–±–ª–∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã")
        
    except ImportError as e:
        console.print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        console.print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

def test_manual_interrupt():
    """–†—É—á–Ω–æ–π —Ç–µ—Å—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
    console.print("\nüéÆ –†–£–ß–ù–û–ô –¢–ï–°–¢ –ü–†–ï–†–´–í–ê–ù–ò–Ø")
    console.print("=" * 40)
    
    console.print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    console.print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ –û–¢–î–ï–õ–¨–ù–û–ú —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:")
    console.print("   cd client && python main.py")
    console.print("")
    console.print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –≤ –û–¢–î–ï–õ–¨–ù–û–ú —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:")
    console.print("   cd server && python grpc_server.py")
    console.print("")
    console.print("3. –í —Ç–µ—Ä–º–∏–Ω–∞–ª–µ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º:")
    console.print("   ‚Ä¢ –°–∫–∞–∂–∏—Ç–µ –¥–ª–∏–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É")
    console.print("   ‚Ä¢ –î–æ–∂–¥–∏—Ç–µ—Å—å –Ω–∞—á–∞–ª–∞ —Ä–µ—á–∏")
    console.print("   ‚Ä¢ –ù–ê–ñ–ú–ò–¢–ï –ü–†–û–ë–ï–õ –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
    console.print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:")
    console.print("     - –§–õ–ê–ì –û–¢–ú–ï–ù–´ –£–°–¢–ê–ù–û–í–õ–ï–ù –ú–ì–ù–û–í–ï–ù–ù–û!")
    console.print("     - –ü–†–ï–†–´–í–ê–ù–ò–ï –ê–ö–¢–ò–í–ù–û –ü–ï–†–ï–î –ù–ê–ß–ê–õ–û–ú –°–¢–†–ò–ú–ê!")
    console.print("     - –í–°–ï –∞—É–¥–∏–æ –¥–∞–Ω–Ω—ã–µ –ú–ì–ù–û–í–ï–ù–ù–û –æ—á–∏—â–µ–Ω—ã!")
    console.print("     - –ù–ï–¢ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–∑–æ–≤–æ–≤!")
    
    console.print("\n‚è≥ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞...")
    input()

def analyze_code_quality():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
    console.print("\nüîç –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –ö–û–î–ê")
    console.print("=" * 40)
    
    console.print("üìä –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
    console.print("‚úÖ –£–±—Ä–∞–Ω—ã –¥—É–±–ª–∏ clear_all_audio_data()")
    console.print("‚úÖ –£–±—Ä–∞–Ω—ã –¥—É–±–ª–∏ force_interrupt_server()")
    console.print("‚úÖ –£–ø—Ä–æ—â–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ _cancelled")
    console.print("‚úÖ –°–æ–∑–¥–∞–Ω –µ–¥–∏–Ω—ã–π –º–µ—Ç–æ–¥ _force_interrupt_all()")
    console.print("‚úÖ –£–±—Ä–∞–Ω–∞ –∏–∑–±—ã—Ç–æ—á–Ω–∞—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
    
    console.print("\nüìä –ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:")
    console.print("1. _interrupt_audio() - —Ç–æ–ª—å–∫–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞—É–¥–∏–æ")
    console.print("2. _cancel_tasks() - –æ—Ç–º–µ–Ω–∞ gRPC –∑–∞–¥–∞—á + —Å–µ—Ä–≤–µ—Ä")
    console.print("3. _force_interrupt_all() - –µ–¥–∏–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—Å–µ–≥–æ")
    console.print("4. _consume_stream() - –ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–ª–∞–≥–∞")
    
    console.print("\nüéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:")
    console.print("‚Ä¢ –ù–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞")
    console.print("‚Ä¢ –ß–µ—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏")
    console.print("‚Ä¢ –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
    console.print("‚Ä¢ –õ–µ–≥—á–µ –æ—Ç–ª–∞–∂–∏–≤–∞—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã
        await test_interrupt_logic()
        
        # –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
        analyze_code_quality()
        
        # –†—É—á–Ω–æ–π —Ç–µ—Å—Ç
        test_manual_interrupt()
        
    except KeyboardInterrupt:
        console.print("\nüëã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        console.print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        console.print("\nüëã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    except Exception as e:
        console.print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
