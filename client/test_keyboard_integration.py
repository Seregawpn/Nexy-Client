#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —á–µ—Ä–µ–∑ InputProcessingIntegration
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent))
sys.path.append(str(Path(__file__).parent / "integration" / "core"))

from integration.core.event_bus import EventBus, EventPriority
from integration.core.state_manager import ApplicationStateManager, AppMode
from integration.core.error_handler import ErrorHandler
from integration.integrations.input_processing_integration import InputProcessingIntegration, InputProcessingConfig
from modules.input_processing.keyboard.types import KeyboardConfig

async def main():
    print("üéπ –¢–µ—Å—Ç InputProcessingIntegration...")
    
    # –°–æ–∑–¥–∞–µ–º core –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    event_bus = EventBus()
    state_manager = ApplicationStateManager()
    error_handler = ErrorHandler(event_bus)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    keyboard_config = KeyboardConfig(
        key_to_monitor="space",
        short_press_threshold=0.6,
        long_press_threshold=1.0,
        event_cooldown=0.1,
        hold_check_interval=0.05,
        debounce_time=0.1
    )
    
    input_config = InputProcessingConfig(
        keyboard_config=keyboard_config,
        enable_keyboard_monitoring=True,
        auto_start=True
    )
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
    integration = InputProcessingIntegration(
        event_bus=event_bus,
        state_manager=state_manager,
        error_handler=error_handler,
        config=input_config
    )
    
    # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    async def on_voice_start(event):
        print(f"üé§ VOICE START: {event}")
    
    async def on_voice_stop(event):
        print(f"üé§ VOICE STOP: {event}")
    
    async def on_mode_change(event):
        print(f"üîÑ MODE CHANGE: {event}")
    
    await event_bus.subscribe("voice.recording_start", on_voice_start)
    await event_bus.subscribe("voice.recording_stop", on_voice_stop)
    await event_bus.subscribe("app.mode_changed", on_mode_change)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
    success = await integration.initialize()
    if not success:
        print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
        return
    
    success = await integration.start()
    if not success:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞")
        return
    
    print("‚úÖ InputProcessingIntegration –∑–∞–ø—É—â–µ–Ω")
    print("‚å®Ô∏è –ù–∞–∂–º–∏—Ç–µ –ø—Ä–æ–±–µ–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
    
    try:
        # –ñ–¥–µ–º —Å–æ–±—ã—Ç–∏—è
        await asyncio.sleep(30)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω")
    finally:
        await integration.stop()

if __name__ == "__main__":
    asyncio.run(main())

