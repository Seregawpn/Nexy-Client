#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Sounddevice Buffering - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é sounddevice
"""

import asyncio
import time
import numpy as np
import sys
import os
import sounddevice as sd

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from audio_player import AudioPlayer

async def test_sounddevice_buffering():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é sounddevice"""
    
    print("üîä –¢–ï–°–¢ SOUNDDEVICE BUFFERING")
    print("=" * 60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ sounddevice
    print("1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê SOUNDDEVICE:")
    try:
        devices = sd.query_devices()
        print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {len(devices)}")
        
        default_device = sd.default.device
        print(f"   üéµ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {default_device}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        if default_device[1] is not None:
            device_info = sd.query_devices(default_device[1])
            print(f"   üìä –ö–∞–Ω–∞–ª—ã: {device_info['max_input_channels']} –≤—Ö–æ–¥, {device_info['max_output_channels']} –≤—ã—Ö–æ–¥")
            print(f"   üéØ –ß–∞—Å—Ç–æ—Ç–∞: {device_info['default_samplerate']} Hz")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ sounddevice: {e}")
        return
    
    # 2. –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    print("\n2Ô∏è‚É£ –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–Ø:")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ (1 —Å–µ–∫—É–Ω–¥–∞)
    sample_rate = 44100
    duration = 1
    test_audio = np.sin(2 * np.pi * 440 * np.linspace(0, duration, sample_rate * duration))
    test_audio = (test_audio * 0.3).astype(np.float32)
    
    print(f"   üì¶ –°–æ–∑–¥–∞–Ω–æ –∞—É–¥–∏–æ: {len(test_audio)} —Å—ç–º–ø–ª–æ–≤ ({duration}s)")
    
    # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ sounddevice
    print("   üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–∂—É —á–µ—Ä–µ–∑ sounddevice...")
    start_time = time.time()
    
    try:
        # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π
        sd.play(test_audio, sample_rate, blocking=True)
        play_time = (time.time() - start_time) * 1000
        print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {play_time:.1f}ms")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É
        print("   üö® –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é sounddevice...")
        stop_start = time.time()
        sd.stop()
        stop_time = (time.time() - stop_start) * 1000
        print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {stop_time:.1f}ms")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {e}")
    
    # 3. –¢–µ—Å—Ç –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏
    print("\n3Ô∏è‚É£ –¢–ï–°–¢ –ë–£–§–ï–†–ò–ó–ê–¶–ò–ò:")
    
    # –°–æ–∑–¥–∞–µ–º –¥–ª–∏–Ω–Ω–æ–µ –∞—É–¥–∏–æ (5 —Å–µ–∫—É–Ω–¥)
    long_audio = np.sin(2 * np.pi * 440 * np.linspace(0, 5, sample_rate * 5))
    long_audio = (long_audio * 0.3).astype(np.float32)
    
    print(f"   üì¶ –°–æ–∑–¥–∞–Ω–æ –¥–ª–∏–Ω–Ω–æ–µ –∞—É–¥–∏–æ: {len(long_audio)} —Å—ç–º–ø–ª–æ–≤ (5s)")
    
    # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    print("   üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–∂—É –¥–ª–∏–Ω–Ω–æ–µ –∞—É–¥–∏–æ...")
    start_time = time.time()
    
    try:
        # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        stream = sd.OutputStream(
            samplerate=sample_rate,
            channels=1,
            dtype=np.float32,
            blocksize=1024
        )
        
        with stream:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
            stream.start()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —á–∞—Å—Ç—è–º
            chunk_size = 4410  # 100ms
            for i in range(0, len(long_audio), chunk_size):
                chunk = long_audio[i:i+chunk_size]
                stream.write(chunk)
                
                # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                if i >= sample_rate:
                    print("   üö® –ü–†–ï–†–´–í–ê–ù–ò–ï –ß–ï–†–ï–ó 1 –°–ï–ö–£–ù–î–£!")
                    break
                
                time.sleep(0.1)  # 100ms –∑–∞–¥–µ—Ä–∂–∫–∞
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
            stream.stop()
            
        play_time = (time.time() - start_time) * 1000
        print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {play_time:.1f}ms")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
    
    # 4. –¢–µ—Å—Ç AudioPlayer vs Sounddevice
    print("\n4Ô∏è‚É£ –¢–ï–°–¢ AUDIOPLAYER VS SOUNDDEVICE:")
    
    audio_player = AudioPlayer()
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –∞—É–¥–∏–æ
    short_audio = np.sin(2 * np.pi * 440 * np.linspace(0, 0.5, int(sample_rate * 0.5)))
    short_audio = (short_audio * 0.3).astype(np.float32)
    
    print(f"   üì¶ –°–æ–∑–¥–∞–Ω–æ –∫–æ—Ä–æ—Ç–∫–æ–µ –∞—É–¥–∏–æ: {len(short_audio)} —Å—ç–º–ø–ª–æ–≤ (0.5s)")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º AudioPlayer
    print("   üéµ –¢–µ—Å—Ç–∏—Ä—É—é AudioPlayer...")
    audio_start = time.time()
    
    audio_player.add_chunk(short_audio)
    await asyncio.sleep(0.1)  # 100ms
    
    # –ü—Ä–µ—Ä—ã–≤–∞–µ–º AudioPlayer
    print("   üö® –ü–†–ï–†–´–í–ê–ù–ò–ï AUDIOPLAYER!")
    interrupt_start = time.time()
    audio_player.clear_all_audio_data()
    interrupt_time = (time.time() - interrupt_start) * 1000
    
    print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è AudioPlayer: {interrupt_time:.1f}ms")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É sounddevice
    print("   üéµ –¢–µ—Å—Ç–∏—Ä—É—é –ø—Ä—è–º—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É sounddevice...")
    sd_start = time.time()
    sd.stop()
    sd_time = (time.time() - sd_start) * 1000
    
    print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ sounddevice: {sd_time:.1f}ms")
    
    # 5. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
    print("\n5Ô∏è‚É£ –°–†–ê–í–ù–ï–ù–ò–ï:")
    print(f"   üéØ AudioPlayer –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ: {interrupt_time:.1f}ms")
    print(f"   üéØ Sounddevice –æ—Å—Ç–∞–Ω–æ–≤–∫–∞: {sd_time:.1f}ms")
    
    if interrupt_time < sd_time:
        print("   ‚úÖ AudioPlayer –±—ã—Å—Ç—Ä–µ–µ sounddevice!")
    else:
        print("   ‚ö†Ô∏è Sounddevice –±—ã—Å—Ç—Ä–µ–µ AudioPlayer!")
    
    # 6. –û—á–∏—Å—Ç–∫–∞
    print("\n6Ô∏è‚É£ –û–ß–ò–°–¢–ö–ê:")
    audio_player.force_stop_immediately()
    sd.stop()
    
    print("   ‚úÖ –†–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã")

async def test_os_level_buffering():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º OS-—É—Ä–æ–≤–Ω–µ–≤—É—é –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é"""
    
    print("\nüíª –¢–ï–°–¢ OS-–£–†–û–í–ù–ï–í–û–ô –ë–£–§–ï–†–ò–ó–ê–¶–ò–ò:")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º AudioPlayer
    audio_player = AudioPlayer()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ
    sample_rate = 44100
    duration = 2
    test_audio = np.sin(2 * np.pi * 440 * np.linspace(0, duration, sample_rate * duration))
    test_audio = (test_audio * 0.3).astype(np.float32)
    
    print(f"   üì¶ –°–æ–∑–¥–∞–Ω–æ –∞—É–¥–∏–æ: {len(test_audio)} —Å—ç–º–ø–ª–æ–≤ ({duration}s)")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –≤ –æ—á–µ—Ä–µ–¥—å
    print("   üì• –î–æ–±–∞–≤–ª—è—é –∞—É–¥–∏–æ –≤ –æ—á–µ—Ä–µ–¥—å...")
    audio_player.add_chunk(test_audio)
    
    # –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    print("   ‚è∞ –ñ–¥—É –Ω–∞—á–∞–ª–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è...")
    await asyncio.sleep(0.5)  # 500ms
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏
    queue_size = audio_player.audio_queue.qsize()
    print(f"   üìä –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {queue_size}")
    
    # –ü—Ä–µ—Ä—ã–≤–∞–µ–º
    print("   üö® –ü–†–ï–†–´–í–ê–ù–ò–ï!")
    interrupt_start = time.time()
    audio_player.clear_all_audio_data()
    interrupt_time = (time.time() - interrupt_start) * 1000
    
    print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è: {interrupt_time:.1f}ms")
    
    # –ñ–¥–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ OS –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏
    print("   ‚è∞ –ñ–¥—É 1 —Å–µ–∫—É–Ω–¥—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ OS –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏...")
    await asyncio.sleep(1.0)
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    final_queue_size = audio_player.audio_queue.qsize()
    print(f"   üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {final_queue_size}")
    
    if final_queue_size == 0:
        print("   ‚úÖ OS-—É—Ä–æ–≤–Ω–µ–≤–∞—è –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –º–µ—à–∞–µ—Ç!")
    else:
        print("   ‚ùå OS-—É—Ä–æ–≤–Ω–µ–≤–∞—è –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è –º–µ—à–∞–µ—Ç!")
    
    # –û—á–∏—Å—Ç–∫–∞
    audio_player.force_stop_immediately()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Sounddevice Buffering...")
    
    # –¢–µ—Å—Ç 1: Sounddevice Buffering
    asyncio.run(test_sounddevice_buffering())
    
    # –¢–µ—Å—Ç 2: OS Level Buffering
    asyncio.run(test_os_level_buffering())
