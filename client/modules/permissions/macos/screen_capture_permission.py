"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π Screen Capture –¥–ª—è macOS
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ API –≤–º–µ—Å—Ç–æ –ø—Ä—è–º—ã—Ö TCC –≤—ã–∑–æ–≤–æ–≤
"""

import logging
from typing import Optional

logger = logging.getLogger(__name__)

class ScreenCapturePermissionManager:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π Screen Capture –¥–ª—è macOS"""
    
    def __init__(self):
        self.bundle_id = "com.nexy.assistant"
        self._available = False
        
        try:
            from Quartz import CGPreflightScreenCaptureAccess, CGRequestScreenCaptureAccess
            self._preflight = CGPreflightScreenCaptureAccess
            self._request = CGRequestScreenCaptureAccess
            self._available = True
        except ImportError as e:
            logger.warning(f"Quartz framework –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
            self._preflight = None
            self._request = None
    
    def check_permission(self) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ Screen Capture
        
        Returns:
            bool: True –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ
        """
        try:
            if not self._available or not self._preflight:
                logger.warning("‚ö†Ô∏è Quartz framework –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                return False
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            has_permission = self._preflight()
            
            if has_permission:
                logger.info("‚úÖ Screen Capture permission granted")
            else:
                logger.warning("‚ö†Ô∏è Screen Capture permission not granted")
            
            return has_permission
            
        except Exception as e:
            logger.error(f"‚ùå Error checking Screen Capture permission: {e}")
            return False
    
    def request_permission(self) -> bool:
        """
        –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ Screen Capture
        
        Returns:
            bool: True –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ
        """
        try:
            if not self._available or not self._request:
                logger.warning("‚ö†Ô∏è Quartz framework –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                return False
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ (–≤—ã–∑–æ–≤–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏–∞–ª–æ–≥)
            granted = self._request()
            
            if granted:
                logger.info("‚úÖ Screen Capture permission granted after request")
            else:
                logger.warning("‚ö†Ô∏è Screen Capture permission denied by user")
            
            return granted
            
        except Exception as e:
            logger.error(f"‚ùå Error requesting Screen Capture permission: {e}")
            return False
    
    def get_instructions(self) -> str:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Screen Capture
        
        Returns:
            str: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        """
        return """
üì∏ –†–ê–ó–†–ï–®–ï–ù–ò–ï –ó–ê–•–í–ê–¢–ê –≠–ö–†–ê–ù–ê

1. –û—Ç–∫—Ä–æ–π—Ç–µ '–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'
3. –í—ã–±–µ—Ä–∏—Ç–µ '–ó–∞—Ö–≤–∞—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —ç–∫—Ä–∞–Ω–∞'
4. –í–∫–ª—é—á–∏—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–ª—è Nexy AI Assistant

–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:
open "x-apple.systempreferences:com.apple.preference.security?Privacy_ScreenCapture"

–í–ê–ñ–ù–û: –≠—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞ —ç–∫—Ä–∞–Ω–∞.
        """
    
    @property
    def is_available(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Screen Capture API"""
        return self._available
