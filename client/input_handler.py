import asyncio
import time
from pynput import keyboard
from threading import Thread
from rich.console import Console

console = Console()

class InputHandler:
    """
    –ü—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è push-to-talk.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–±—ã—Ç–∏—è –≤ –æ—á–µ—Ä–µ–¥—å, –Ω–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
    """
    
    def __init__(self, loop: asyncio.AbstractEventLoop, queue: asyncio.Queue):
        self.loop = loop
        self.queue = queue
        self.press_time = None
        self.short_press_threshold = 0.3   # –ü–æ—Ä–æ–≥ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –Ω–∞–∂–∞—Ç–∏–π (300ms)
        self.space_pressed = False
        self.last_event_time = 0
        self.event_cooldown = 0.1
        self.recording_started = False
        
        # –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
        self.interrupting = False
        # üÜï –§–ª–∞–≥: –±—ã–ª–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ deactivate_microphone
        self.command_processed = False

        # –ó–∞–ø—É—Å–∫–∞–µ–º listener –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        self.listener_thread = Thread(target=self._run_listener, daemon=True)
        self.listener_thread.start()

    def _run_listener(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç listener –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
        with keyboard.Listener(on_press=self.on_press, on_release=self.on_release) as listener:
            listener.join()

    def on_press(self, key):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à–∏"""
        if key == keyboard.Key.space and not self.space_pressed:
            current_time = time.time()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º cooldown –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
            if current_time - self.last_event_time < self.event_cooldown:
                console.print(f"[dim]‚è∞ Cooldown –∞–∫—Ç–∏–≤–µ–Ω: {self.event_cooldown - (current_time - self.last_event_time):.3f}s[/dim]")
                return
                
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–∞–∂–∞—Ç–∏—è –∏ –≤—Ä–µ–º—è
            self.space_pressed = True
            self.press_time = current_time
            self.last_event_time = current_time
            
            # 1. –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –§–õ–ê–ì –ü–†–ï–†–´–í–ê–ù–ò–Ø
            self.interrupting = True
            console.print(f"[bold red]üîá –ü–†–û–ë–ï–õ –ù–ê–ñ–ê–¢ - –ú–ì–ù–û–í–ï–ù–ù–û–ï –ü–†–ï–†–´–í–ê–ù–ò–ï –†–ï–ß–ò! (–≤—Ä–µ–º—è: {current_time:.3f})[/bold red]")
            console.print(f"[dim]üîç –§–ª–∞–≥ interrupting —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {self.interrupting}[/dim]")
            
            # 2. –û–¢–ü–†–ê–í–õ–Ø–ï–ú –¢–û–õ–¨–ö–û –ü–†–ï–†–´–í–ê–ù–ò–ï - –º–∏–∫—Ä–æ—Ñ–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
            self.loop.call_soon_threadsafe(self.queue.put_nowait, "interrupt_or_cancel")
            console.print(f"[dim]üì§ –°–æ–±—ã—Ç–∏–µ interrupt_or_cancel –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å[/dim]")
            
            # üö® –£–ë–ò–†–ê–ï–ú start_recording - –º–∏–∫—Ä–æ—Ñ–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ handle_interrupt_or_cancel!
            console.print(f"[dim]üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –ø–æ—Å–ª–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è![/dim]")

    def on_release(self, key):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—É—Å–∫–∞–Ω–∏–µ –∫–ª–∞–≤–∏—à–∏"""
        if key == keyboard.Key.space and self.space_pressed:
            current_time = time.time()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º cooldown –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
            if current_time - self.last_event_time < self.event_cooldown:
                console.print(f"[dim]‚è∞ Cooldown –∞–∫—Ç–∏–≤–µ–Ω –ø—Ä–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–∏: {self.event_cooldown - (current_time - self.last_event_time):.3f}s[/dim]")
                return
                
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–∞–∂–∞—Ç–∏—è
            self.space_pressed = False
            console.print(f"[dim]üîç –§–ª–∞–≥ space_pressed —Å–±—Ä–æ—à–µ–Ω –≤ {current_time:.3f}[/dim]")
            
            # –í—ã—á–∏—Å–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∂–∞—Ç–∏—è
            duration = current_time - self.press_time
            self.press_time = None
            self.last_event_time = current_time
            console.print(f"[dim]üìä –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∂–∞—Ç–∏—è: {duration:.3f}s[/dim]")

            # üö® –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –ø—Ä–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–∏ –ø—Ä–æ–±–µ–ª–∞ –í–°–ï–ì–î–ê –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω
            console.print(f"üîá –ü—Ä–æ–±–µ–ª –æ—Ç–ø—É—â–µ–Ω - –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É—é –º–∏–∫—Ä–æ—Ñ–æ–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ SLEEPING")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
            self.loop.call_soon_threadsafe(self.queue.put_nowait, "deactivate_microphone")
            console.print(f"[dim]üì§ –°–æ–±—ã—Ç–∏–µ deactivate_microphone –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å[/dim]")
            
            # –ï—Å–ª–∏ –±—ã–ª–æ –¥–ª–∏–Ω–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ, —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
            if duration >= self.short_press_threshold:
                console.print(f"‚èπÔ∏è –î–ª–∏–Ω–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ ({duration:.2f}s) - –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
                # üö® –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º stop_recording - –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ deactivate_microphone
                console.print(f"[dim]üì§ –ö–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ deactivate_microphone[/dim]")
            else:
                console.print(f"üîá –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ ({duration:.2f}s) - —Ç–æ–ª—å–∫–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ")
                console.print(f"[dim]üîç –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å {duration:.3f}s < {self.short_press_threshold}s - –∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ[/dim]")
            
            # –°–ë–†–ê–°–´–í–ê–ï–ú –§–õ–ê–ì –ü–†–ï–†–´–í–ê–ù–ò–Ø
            console.print(f"[dim]üîç –§–ª–∞–≥ interrupting –î–û —Å–±—Ä–æ—Å–∞: {self.interrupting}[/dim]")
            self.interrupting = False
            console.print(f"[dim]üîç –§–ª–∞–≥ interrupting –ü–û–°–õ–ï —Å–±—Ä–æ—Å–∞: {self.interrupting}[/dim]")
            console.print("üîÑ –ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º —Å–æ–±—ã—Ç–∏—è–º")

    def reset_interrupt_flag(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ñ–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ StateManager"""
        current_time = time.time()
        console.print(f"[dim]üîç reset_interrupt_flag() –≤—ã–∑–≤–∞–Ω –≤ {current_time:.3f}[/dim]")
        console.print(f"[dim]üîç –§–ª–∞–≥ interrupting –î–û —Å–±—Ä–æ—Å–∞: {self.interrupting}[/dim]")
        self.interrupting = False
        console.print(f"[dim]üîç –§–ª–∞–≥ interrupting –ü–û–°–õ–ï —Å–±—Ä–æ—Å–∞: {self.interrupting}[/dim]")
        console.print("[dim]üîÑ –§–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω[/dim]")
    
    def reset_command_processed_flag(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ñ–ª–∞–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏"""
        current_time = time.time()
        console.print(f"[dim]üîç reset_command_processed_flag() –≤—ã–∑–≤–∞–Ω –≤ {current_time:.3f}[/dim]")
        console.print(f"[dim]üîç –§–ª–∞–≥ command_processed –î–û —Å–±—Ä–æ—Å–∞: {self.command_processed}[/dim]")
        self.command_processed = False
        console.print(f"[dim]üîç –§–ª–∞–≥ command_processed –ü–û–°–õ–ï —Å–±—Ä–æ—Å–∞: {self.command_processed}[/dim]")
        console.print("[dim]üîÑ –§–ª–∞–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã —Å–±—Ä–æ—à–µ–Ω[/dim]")
    
    def get_interrupt_status(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
        return self.interrupting

async def main_test():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è InputHandler"""
    print("üß™ –¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ InputHandler:")
    print("‚Ä¢ –ó–∞–∂–º–∏—Ç–µ –ø—Ä–æ–±–µ–ª ‚Üí –°–†–ê–ó–£ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ + –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞")
    print("‚Ä¢ –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–±–µ–ª ‚Üí –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å")
    print("‚Ä¢ –û—Ç–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–±–µ–ª ‚Üí –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å + –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã")
    print("‚Ä¢ –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ ‚Üí —Ç–æ–ª—å–∫–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
    print("‚Ä¢ –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    
    event_queue = asyncio.Queue()
    loop = asyncio.get_running_loop()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    InputHandler(loop, event_queue)
    
    while True:
        event = await event_queue.get()
        print(f"üì° –°–æ–±—ã—Ç–∏–µ: {event}")
        if event == "exit":
            break

if __name__ == "__main__":
    try:
        asyncio.run(main_test())
    except KeyboardInterrupt:
        print("\nüëã –í—ã—Ö–æ–¥.")

