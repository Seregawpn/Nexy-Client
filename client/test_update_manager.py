#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –º–æ–¥—É–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent))

from modules.update_manager import UpdateManager, UpdateConfig, UpdateStatus
from integration.core.event_bus import EventBus
from integration.core.state_manager import ApplicationStateManager
from integration.core.error_handler import ErrorHandler

async def test_update_manager():
    """–¢–µ—Å—Ç –º–æ–¥—É–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    print("üß™ –¢–ï–°–¢ –ú–û–î–£–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–ô")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    event_bus = EventBus()
    state_manager = ApplicationStateManager()
    error_handler = ErrorHandler(event_bus)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = UpdateConfig(
        enabled=True,
        check_interval=1,  # 1 —á–∞—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        check_time="02:00",
        auto_install=True,
        announce_updates=False,  # –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º
        check_on_startup=True,
        appcast_url="https://api.nexy.ai/updates/appcast.xml",
        retry_attempts=3,
        retry_delay=300,
        silent_mode=True,
        log_updates=True
    )
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    update_manager = UpdateManager(
        config=config,
        event_bus=event_bus,
        state_manager=state_manager
    )
    
    print(f"‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω")
    print(f"üìä –°—Ç–∞—Ç—É—Å: {update_manager.get_current_status().value}")
    print(f"üîß –í–∫–ª—é—á–µ–Ω: {update_manager.is_enabled()}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    update_info = await update_manager.check_for_updates()
    
    if update_info:
        print(f"üì¶ –î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {update_info.version}")
        print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {update_info.release_notes}")
        print(f"üìè –†–∞–∑–º–µ—Ä: {update_info.file_size} –±–∞–π—Ç")
    else:
        print("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    print(f"üìä –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏: {update_manager.get_current_status().value}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    available_update = update_manager.get_available_update()
    if available_update:
        print(f"üì¶ –î–æ—Å—Ç—É–ø–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {available_update.version}")
    else:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    asyncio.run(test_update_manager())
