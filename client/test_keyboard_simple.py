#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent))

from modules.input_processing.keyboard.keyboard_monitor import KeyboardMonitor
from modules.input_processing.keyboard.types import KeyboardConfig, KeyEvent, KeyEventType

class TestKeyboardHandler:
    def __init__(self):
        self.event_count = 0
        
    async def handle_press(self, event: KeyEvent):
        self.event_count += 1
        print(f"üîë ASYNC PRESS {self.event_count}: {event.timestamp}")
        
    async def handle_release(self, event: KeyEvent):
        self.event_count += 1
        print(f"üîë ASYNC RELEASE {self.event_count}: {event.duration:.3f}—Å")

async def main():
    print("üéπ –¢–µ—Å—Ç async –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã...")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = KeyboardConfig(
        key_to_monitor="space",
        short_press_threshold=0.6,
        long_press_threshold=1.0,
        event_cooldown=0.1,
        hold_check_interval=0.05,
        debounce_time=0.1
    )
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    handler = TestKeyboardHandler()
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä
    monitor = KeyboardMonitor(config)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º async callback'–∏
    monitor.register_callback(KeyEventType.PRESS, handler.handle_press)
    monitor.register_callback(KeyEventType.RELEASE, handler.handle_release)
    
    # –ü–µ—Ä–µ–¥–∞–µ–º event loop
    monitor.set_loop(asyncio.get_running_loop())
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    monitor.start_monitoring()
    
    print("‚å®Ô∏è –ù–∞–∂–º–∏—Ç–µ –ø—Ä–æ–±–µ–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
    
    try:
        # –ñ–¥–µ–º —Å–æ–±—ã—Ç–∏—è
        await asyncio.sleep(30)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω")
    finally:
        monitor.stop_monitoring()
        print(f"üìä –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {handler.event_count}")

if __name__ == "__main__":
    asyncio.run(main())

