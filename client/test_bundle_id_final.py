#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Bundle ID
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤–µ–∑–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID com.nexy.assistant
"""

import os
import re

def test_bundle_id_consistency():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å Bundle ID –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö"""
    print("üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Bundle ID...")
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID
    correct_bundle_id = "com.nexy.assistant"
    
    # –§–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    critical_files = [
        "packaging/Nexy.spec",
        "config/unified_config.yaml", 
        "packaging/LaunchAgent/com.nexy.assistant.plist",
        "integration/integrations/autostart_manager_integration.py",
        "test_integrations_simple.py"
    ]
    
    all_correct = True
    
    for file_path in critical_files:
        if os.path.exists(file_path):
            with open(file_path, 'r') as f:
                content = f.read()
                
            # –ò—â–µ–º –≤—Å–µ Bundle ID –≤ —Ñ–∞–π–ª–µ
            bundle_ids = re.findall(r'com\.nexy\.[a-zA-Z0-9._-]+', content)
            
            if bundle_ids:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ Bundle ID –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–ª–∏ —è–≤–ª—è—é—Ç—Å—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
                wrong_ids = []
                for bid in bundle_ids:
                    # –†–∞–∑—Ä–µ—à–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ Bundle ID –∏ –∏—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
                    if (bid == correct_bundle_id or 
                        bid.startswith(correct_bundle_id + '.') or
                        bid.endswith('.plist') or
                        bid.endswith('.url')):
                        continue
                    else:
                        wrong_ids.append(bid)
                
                if wrong_ids:
                    print(f"‚ùå {file_path}: –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ Bundle ID: {wrong_ids}")
                    all_correct = False
                else:
                    print(f"‚úÖ {file_path}: –≤—Å–µ Bundle ID –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ")
            else:
                print(f"‚ö†Ô∏è {file_path}: Bundle ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå {file_path}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            all_correct = False
    
    return all_correct

def test_spec_file_bundle_id():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º Bundle ID –≤ spec —Ñ–∞–π–ª–µ"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ spec —Ñ–∞–π–ª–∞...")
    
    spec_path = "packaging/Nexy.spec"
    if not os.path.exists(spec_path):
        print("‚ùå Spec —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(spec_path, 'r') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º bundle_identifier
    if "bundle_identifier='com.nexy.assistant'" in content:
        print("‚úÖ bundle_identifier –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
    else:
        print("‚ùå bundle_identifier –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º CFBundleIdentifier
    if "'CFBundleIdentifier': 'com.nexy.assistant'" in content:
        print("‚úÖ CFBundleIdentifier –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
    else:
        print("‚ùå CFBundleIdentifier –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
        return False
    
    return True

def test_config_bundle_id():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º Bundle ID –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    config_path = "config/unified_config.yaml"
    if not os.path.exists(config_path):
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    with open(config_path, 'r') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ bundle_id
    bundle_id_matches = re.findall(r'bundle_id:\s*["\']?com\.nexy\.[a-zA-Z0-9._-]+["\']?', content)
    
    if bundle_id_matches:
        wrong_ids = [match for match in bundle_id_matches if 'com.nexy.assistant' not in match]
        
        if wrong_ids:
            print(f"‚ùå –ù–∞–π–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ bundle_id: {wrong_ids}")
            return False
        else:
            print(f"‚úÖ –í—Å–µ bundle_id –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ: {bundle_id_matches}")
            return True
    else:
        print("‚ùå bundle_id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return False

def test_launch_agent_bundle_id():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º Bundle ID –≤ LaunchAgent"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ LaunchAgent...")
    
    plist_path = "packaging/LaunchAgent/com.nexy.assistant.plist"
    if not os.path.exists(plist_path):
        print("‚ùå LaunchAgent –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(plist_path, 'r') as f:
        content = f.read()
    
    if "<string>com.nexy.assistant</string>" in content:
        print("‚úÖ LaunchAgent —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID")
        return True
    else:
        print("‚ùå LaunchAgent —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID")
        return False

if __name__ == "__main__":
    print("üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê BUNDLE ID")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –û–±—â–∞—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å
    consistency_ok = test_bundle_id_consistency()
    
    # –¢–µ—Å—Ç 2: Spec —Ñ–∞–π–ª
    spec_ok = test_spec_file_bundle_id()
    
    # –¢–µ—Å—Ç 3: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    config_ok = test_config_bundle_id()
    
    # –¢–µ—Å—Ç 4: LaunchAgent
    launch_agent_ok = test_launch_agent_bundle_id()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"–ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å: {'‚úÖ –û–ö' if consistency_ok else '‚ùå –ù–ï –û–ö'}")
    print(f"Spec —Ñ–∞–π–ª: {'‚úÖ –û–ö' if spec_ok else '‚ùå –ù–ï –û–ö'}")
    print(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {'‚úÖ –û–ö' if config_ok else '‚ùå –ù–ï –û–ö'}")
    print(f"LaunchAgent: {'‚úÖ –û–ö' if launch_agent_ok else '‚ùå –ù–ï –û–ö'}")
    
    if consistency_ok and spec_ok and config_ok and launch_agent_ok:
        print("\nüéâ BUNDLE ID –ù–ê–°–¢–†–û–ï–ù –ü–†–ê–í–ò–õ–¨–ù–û!")
        print("‚úÖ com.nexy.assistant –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ–∑–¥–µ")
        print("üöÄ –ú–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    else:
        print("\n‚ö†Ô∏è BUNDLE ID –ù–ï –ù–ê–°–¢–†–û–ï–ù –ü–†–ê–í–ò–õ–¨–ù–û!")
        print("‚ùå –ù—É–∂–Ω—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
