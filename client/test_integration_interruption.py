#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è: StateManager + AudioPlayer + gRPC
"""

import asyncio
import time
import numpy as np
import threading
from unittest.mock import Mock, AsyncMock
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from audio_player import AudioPlayer

class MockGrpcClient:
    """–ú–æ–∫ gRPC –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.interrupt_called = False
        self.interrupt_time = 0
        
    async def force_interrupt_server(self):
        """–ú–æ–∫ –º–µ—Ç–æ–¥–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞"""
        start_time = time.time()
        self.interrupt_called = True
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
        await asyncio.sleep(0.01)  # 10ms –∑–∞–¥–µ—Ä–∂–∫–∞
        self.interrupt_time = (time.time() - start_time) * 1000
        print(f"   üåê gRPC –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {self.interrupt_time:.1f}ms")

class MockStateManager:
    """–ú–æ–∫ StateManager –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.audio_player = AudioPlayer()
        self.grpc_client = MockGrpcClient()
        self._cancelled = False
        self.streaming_task = None
        self.active_call = None
        
    def _force_interrupt_all(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
        print("   üö® _force_interrupt_all() –≤—ã–∑–≤–∞–Ω")
        start_time = time.time()
        
        # 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–º–µ–Ω—ã
        self._cancelled = True
        print(f"   ‚úÖ –§–ª–∞–≥ –æ—Ç–º–µ–Ω—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {(time.time() - start_time)*1000:.1f}ms")
        
        # 2. –ü—Ä–µ—Ä—ã–≤–∞–µ–º –∞—É–¥–∏–æ
        audio_start = time.time()
        self._interrupt_audio()
        audio_time = (time.time() - audio_start) * 1000
        print(f"   ‚úÖ –ê—É–¥–∏–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ: {audio_time:.1f}ms")
        
        # 3. –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á–∏
        tasks_start = time.time()
        self._cancel_tasks()
        tasks_time = (time.time() - tasks_start) * 1000
        print(f"   ‚úÖ –ó–∞–¥–∞—á–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã: {tasks_time:.1f}ms")
        
        total_time = (time.time() - start_time) * 1000
        print(f"   ‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è: {total_time:.1f}ms")
        
    def _interrupt_audio(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ"""
        print("   üîá _interrupt_audio() –≤—ã–∑–≤–∞–Ω")
        start_time = time.time()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
        self.audio_player.interrupt_flag.set()
        
        # –û—á–∏—â–∞–µ–º –≤—Å–µ –∞—É–¥–∏–æ –¥–∞–Ω–Ω—ã–µ
        self.audio_player.clear_all_audio_data()
        
        time_taken = (time.time() - start_time) * 1000
        print(f"   ‚úÖ –ê—É–¥–∏–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ –∑–∞: {time_taken:.1f}ms")
        
    def _cancel_tasks(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–º–µ–Ω—É –∑–∞–¥–∞—á"""
        print("   üö´ _cancel_tasks() –≤—ã–∑–≤–∞–Ω")
        start_time = time.time()
        
        # –û—Ç–º–µ–Ω—è–µ–º streaming_task
        if self.streaming_task:
            self.streaming_task.cancel()
            print("   ‚úÖ streaming_task –æ—Ç–º–µ–Ω–µ–Ω")
            
        # –û—Ç–º–µ–Ω—è–µ–º active_call
        if self.active_call:
            self.active_call.cancel()
            print("   ‚úÖ active_call –æ—Ç–º–µ–Ω–µ–Ω")
            
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        asyncio.create_task(self.grpc_client.force_interrupt_server())
        
        time_taken = (time.time() - start_time) * 1000
        print(f"   ‚úÖ –ó–∞–¥–∞—á–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã –∑–∞: {time_taken:.1f}ms")

async def test_integration_interruption():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ"""
    
    print("üîó –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–û–ì–û –ü–†–ï–†–´–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    print("\n1Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–û–í:")
    state_manager = MockStateManager()
    print("   ‚úÖ MockStateManager —Å–æ–∑–¥–∞–Ω")
    print("   ‚úÖ AudioPlayer —Å–æ–∑–¥–∞–Ω")
    print("   ‚úÖ MockGrpcClient —Å–æ–∑–¥–∞–Ω")
    
    # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞—É–¥–∏–æ
    print("\n2Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –ê–£–î–ò–û:")
    sample_rate = 44100
    duration = 3  # 3 —Å–µ–∫—É–Ω–¥—ã
    test_audio = np.sin(2 * np.pi * 440 * np.linspace(0, duration, sample_rate * duration))
    test_audio = (test_audio * 0.3).astype(np.float32)
    print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ —Å–æ–∑–¥–∞–Ω–æ: {len(test_audio)} —Å—ç–º–ø–ª–æ–≤")
    
    # 3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ –≤ –æ—á–µ—Ä–µ–¥—å
    print("\n3Ô∏è‚É£ –î–û–ë–ê–í–õ–ï–ù–ò–ï –ê–£–î–ò–û –í –û–ß–ï–†–ï–î–¨:")
    chunk_size = 44100  # 1 —Å–µ–∫—É–Ω–¥–∞
    for i in range(0, len(test_audio), chunk_size):
        chunk = test_audio[i:i+chunk_size]
        state_manager.audio_player.add_chunk(chunk)
        print(f"   üì¶ –ß–∞–Ω–∫ {i//chunk_size + 1} –¥–æ–±–∞–≤–ª–µ–Ω: {len(chunk)} —Å—ç–º–ø–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏
    queue_size = state_manager.audio_player.audio_queue.qsize()
    print(f"   üìä –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {queue_size}")
    
    # 4. –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–∫-–∑–∞–¥–∞—á
    print("\n4Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ú–û–ö-–ó–ê–î–ê–ß:")
    state_manager.streaming_task = Mock()
    state_manager.streaming_task.cancel = Mock()
    state_manager.active_call = Mock()
    state_manager.active_call.cancel = Mock()
    print("   ‚úÖ streaming_task —Å–æ–∑–¥–∞–Ω")
    print("   ‚úÖ active_call —Å–æ–∑–¥–∞–Ω")
    
    # 5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–ï–†–´–í–ê–ù–ò–Ø
    print("\n5Ô∏è‚É£ üö® –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–ï–†–´–í–ê–ù–ò–Ø:")
    print("   üîá –í—ã–∑—ã–≤–∞—é _force_interrupt_all()...")
    
    interrupt_start = time.time()
    state_manager._force_interrupt_all()
    interrupt_time = (time.time() - interrupt_start) * 1000
    
    print(f"\n   ‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è: {interrupt_time:.1f}ms")
    
    # 6. –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
    print("\n6Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ –æ—Ç–º–µ–Ω—ã
    cancelled_flag = state_manager._cancelled
    print(f"   üö® –§–ª–∞–≥ –æ—Ç–º–µ–Ω—ã: {cancelled_flag}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏
    final_queue_size = state_manager.audio_player.audio_queue.qsize()
    print(f"   üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {final_queue_size}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∞—É–¥–∏–æ
    audio_interrupt_flag = state_manager.audio_player.interrupt_flag.is_set()
    print(f"   üîá –§–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∞—É–¥–∏–æ: {audio_interrupt_flag}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º gRPC –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ
    grpc_interrupt_called = state_manager.grpc_client.interrupt_called
    print(f"   üåê gRPC –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤—ã–∑–≤–∞–Ω–æ: {grpc_interrupt_called}")
    
    # 7. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ï –û–ñ–ò–î–ê–ù–ò–ï
    print("\n7Ô∏è‚É£ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ï –û–ñ–ò–î–ê–ù–ò–ï:")
    await asyncio.sleep(0.1)  # –ñ–¥–µ–º 100ms –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è gRPC
    
    # 8. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
    print("\n8Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∏ –±—ã–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã
    streaming_cancelled = state_manager.streaming_task.cancel.called
    active_call_cancelled = state_manager.active_call.cancel.called
    
    print(f"   ‚úÖ streaming_task.cancel() –≤—ã–∑–≤–∞–Ω: {streaming_cancelled}")
    print(f"   ‚úÖ active_call.cancel() –≤—ã–∑–≤–∞–Ω: {active_call_cancelled}")
    
    # 9. –ó–ê–í–ï–†–®–ï–ù–ò–ï
    print("\n9Ô∏è‚É£ –ó–ê–í–ï–†–®–ï–ù–ò–ï:")
    print("   üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...")
    state_manager.audio_player.force_stop_immediately()
    
    print("\n" + "=" * 60)
    print("üéØ –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if interrupt_time < 50:  # –ú–µ–Ω—å—à–µ 50ms
        print("‚úÖ –ü–†–ï–†–´–í–ê–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢ –ë–´–°–¢–†–û!")
    else:
        print("‚ö†Ô∏è –ü–†–ï–†–´–í–ê–ù–ò–ï –ú–ï–î–õ–ï–ù–ù–û–ï!")
        
    if final_queue_size == 0:
        print("‚úÖ –û–ß–ï–†–ï–î–¨ –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–©–ï–ù–ê!")
    else:
        print("‚ùå –û–ß–ï–†–ï–î–¨ –ù–ï –û–ß–ò–©–ï–ù–ê –ü–û–õ–ù–û–°–¢–¨–Æ!")
        
    if cancelled_flag and audio_interrupt_flag and grpc_interrupt_called:
        print("‚úÖ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ü–†–ï–†–´–í–ê–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢!")
    else:
        print("‚ùå –ù–ï –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ü–†–ï–†–´–í–ê–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢!")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è...")
    asyncio.run(test_integration_interruption())
