import asyncio
import logging
from rich.console import Console
from enum import Enum
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))

from audio_player import AudioPlayer
from stt_recognizer import StreamRecognizer
from input_handler import InputHandler
from grpc_client import GrpcClient
from screen_capture import ScreenCapture

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

console = Console()

class AppState(Enum):
    IDLE = 1          # –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–ø–∏—Ç, –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤—ã–∫–ª—é—á–µ–Ω
    LISTENING = 2     # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É (–ø—Ä–æ–±–µ–ª –∑–∞–∂–∞—Ç)
    PROCESSING = 3    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
    SPEAKING = 4      # –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ–≤–æ—Ä–∏—Ç

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ —Å push-to-talk –ª–æ–≥–∏–∫–æ–π –∏ –∑–∞—Ö–≤–∞—Ç–æ–º —ç–∫—Ä–∞–Ω–∞"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    console.print("[bold blue]üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...[/bold blue]")
    
    # 1. –°–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º STT (–¥–æ gRPC)
    console.print("[blue]üé§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è STT...[/blue]")
    stt_recognizer = StreamRecognizer()
    
    # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞—Ö–≤–∞—Ç —ç–∫—Ä–∞–Ω–∞
    console.print("[blue]üì∏ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞—Ö–≤–∞—Ç–∞ —ç–∫—Ä–∞–Ω–∞...[/blue]")
    screen_capture = ScreenCapture()
    
    # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—É–¥–∏–æ –ø–ª–µ–µ—Ä
    console.print("[blue]üîä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ –ø–ª–µ–µ—Ä–∞...[/blue]")
    audio_player = AudioPlayer(sample_rate=48000)
    
    # 4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º gRPC –∫–ª–∏–µ–Ω—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–º)
    console.print("[blue]üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è gRPC –∫–ª–∏–µ–Ω—Ç–∞...[/blue]")
    grpc_client = GrpcClient()
    
    # –û—á–µ—Ä–µ–¥—å –¥–ª—è —Å–æ–±—ã—Ç–∏–π –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    event_queue = asyncio.Queue()
    loop = asyncio.get_running_loop()
    input_handler = InputHandler(loop, event_queue)
    
    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    state = AppState.IDLE
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    current_screenshot = None
    current_screen_info = None
    
    console.print("[bold green]‚úÖ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤![/bold green]")
    console.print("[yellow]üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:[/yellow]")
    console.print("[yellow]  ‚Ä¢ –ó–∞–∂–º–∏—Ç–µ –ø—Ä–æ–±–µ–ª ‚Üí –°–†–ê–ó–£ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –º–∏–∫—Ä–æ—Ñ–æ–Ω[/yellow]")
    console.print("[yellow]  ‚Ä¢ –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–±–µ–ª ‚Üí –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å[/yellow]")
    console.print("[yellow]  ‚Ä¢ –û—Ç–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–±–µ–ª ‚Üí –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å + –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã[/yellow]")
    console.print("[yellow]  ‚Ä¢ –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ ‚Üí –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞[/yellow]")
    console.print("[yellow]  ‚Ä¢ –ü—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç—Å—è —ç–∫—Ä–∞–Ω[/yellow]")

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–∫—Ä–∞–Ω–µ
        screen_info = screen_capture.get_screen_info()
        console.print(f"[bold blue]üì± –≠–∫—Ä–∞–Ω: {screen_info.get('width', 0)}x{screen_info.get('height', 0)} –ø–∏–∫—Å–µ–ª–µ–π[/bold blue]")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ gRPC —Å–µ—Ä–≤–µ—Ä—É (–ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤)
        console.print("[blue]üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...[/blue]")
        if not await grpc_client.connect():
            console.print("[bold red]‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É[/bold red]")
            return
            
        console.print("[bold green]‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É[/bold green]")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
        while True:
            event = await event_queue.get()
            
            if event == "start_recording" and state == AppState.IDLE:
                # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ - –Ω–∞—á–∏–Ω–∞–µ–º —Å–ª—É—à–∞—Ç—å –∫–æ–º–∞–Ω–¥—É
                state = AppState.LISTENING
                
                # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
                console.print("[bold blue]üì∏ –ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é —ç–∫—Ä–∞–Ω...[/bold blue]")
                current_screenshot = screen_capture.capture_screen(quality=80)
                current_screen_info = screen_info
                
                if current_screenshot:
                    console.print(f"[bold green]‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –∑–∞—Ö–≤–∞—á–µ–Ω: {len(current_screenshot)} —Å–∏–º–≤–æ–ª–æ–≤ Base64[/bold green]")
                else:
                    console.print("[bold yellow]‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ö–≤–∞—Ç–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç[/bold yellow]")
                    current_screenshot = None
                
                stt_recognizer.start_recording()
                console.print("[bold green]üé§ –°–ª—É—à–∞—é –∫–æ–º–∞–Ω–¥—É...[/bold green]")
                console.print("[yellow]üí° –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–±–µ–ª –∏ –≥–æ–≤–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É[/yellow]")
                
            elif event == "interrupt_speech":
                if state == AppState.SPEAKING:
                    # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–µ—á—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                    audio_player.stop_playback()
                    state = AppState.IDLE
                    console.print("[bold red]‚èπÔ∏è –†–µ—á—å –ø—Ä–µ—Ä–≤–∞–Ω–∞[/bold red]")
                elif state == AppState.LISTENING:
                    # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –∑–∞–ø–∏—Å—å –∫–æ–º–∞–Ω–¥—ã
                    stt_recognizer.stop_recording_and_recognize()
                    state = AppState.IDLE
                    console.print("[bold yellow]‚ö†Ô∏è –ó–∞–ø–∏—Å—å –∫–æ–º–∞–Ω–¥—ã –ø—Ä–µ—Ä–≤–∞–Ω–∞[/bold yellow]")
                else:
                    console.print("[yellow]‚ÑπÔ∏è –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω[/yellow]")
                    
            elif event == "stop_recording" and state == AppState.LISTENING:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—É—Å—Ç–∏–ª –ø—Ä–æ–±–µ–ª - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
                state = AppState.PROCESSING
                console.print("[bold blue]üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É...[/bold blue]")
                
                # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å
                command = stt_recognizer.stop_recording_and_recognize()
                
                if command and command.strip():
                    console.print(f"[bold green]üìù –ö–æ–º–∞–Ω–¥–∞: {command}[/bold green]")
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤–º–µ—Å—Ç–µ —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º
                    try:
                        await grpc_client.stream_audio(
                            command, 
                            current_screenshot, 
                            current_screen_info
                        )
                        state = AppState.IDLE
                        console.print("[bold green]‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞[/bold green]")
                        
                        # –û—á–∏—â–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                        current_screenshot = None
                        current_screen_info = None
                        
                    except Exception as e:
                        console.print(f"[bold red]‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}[/bold red]")
                        state = AppState.IDLE
                else:
                    console.print("[yellow]‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞[/yellow]")
                    state = AppState.IDLE
                    
    except KeyboardInterrupt:
        console.print("\n[bold yellow]üëã –í—ã—Ö–æ–¥...[/bold yellow]")
    except Exception as e:
        console.print(f"[bold red]‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}[/bold red]")
    finally:
        # –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        stt_recognizer.cleanup()
        if audio_player.is_playing:
            audio_player.stop_playback()
        logger.info("–ö–ª–∏–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        console.print("\n[bold yellow]üëã –í—ã—Ö–æ–¥...[/bold yellow]")
