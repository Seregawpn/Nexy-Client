import asyncio
import logging
from rich.console import Console
from enum import Enum
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))

from audio_player import AudioPlayer
from stt_recognizer import StreamRecognizer
from input_handler import InputHandler
from grpc_client import GrpcClient

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

console = Console()

class AppState(Enum):
    IDLE = 1          # –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–ø–∏—Ç, –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤—ã–∫–ª—é—á–µ–Ω
    LISTENING = 2     # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É (–ø—Ä–æ–±–µ–ª –∑–∞–∂–∞—Ç)
    PROCESSING = 3    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
    SPEAKING = 4      # –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ–≤–æ—Ä–∏—Ç

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ —Å push-to-talk –ª–æ–≥–∏–∫–æ–π"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    audio_player = AudioPlayer(sample_rate=48000)
    stt_recognizer = StreamRecognizer()
    grpc_client = GrpcClient()
    
    # –û—á–µ—Ä–µ–¥—å –¥–ª—è —Å–æ–±—ã—Ç–∏–π –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    event_queue = asyncio.Queue()
    loop = asyncio.get_running_loop()
    input_handler = InputHandler(loop, event_queue)
    
    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    state = AppState.IDLE
    
    console.print("[bold green]‚úÖ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤![/bold green]")
    console.print("[yellow]üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:[/yellow]")
    console.print("[yellow]  ‚Ä¢ –î–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –ø—Ä–æ–±–µ–ª–∞ (>0.6s) - –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞[/yellow]")
    console.print("[yellow]  ‚Ä¢ –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –ø—Ä–æ–±–µ–ª–∞ (<0.6s) - –ø—Ä–µ—Ä–≤–∞—Ç—å —Ä–µ—á—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞[/yellow]")
    console.print("[yellow]  ‚Ä¢ –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–±–µ–ª –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞[/yellow]")

    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ gRPC —Å–µ—Ä–≤–µ—Ä—É
        if not await grpc_client.connect():
            console.print("[bold red]‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É[/bold red]")
            return
            
        console.print("[bold green]‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É[/bold green]")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
        while True:
            event = await event_queue.get()
            
            if event == "long_press" and state == AppState.IDLE:
                # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ - –Ω–∞—á–∏–Ω–∞–µ–º —Å–ª—É—à–∞—Ç—å –∫–æ–º–∞–Ω–¥—É
                state = AppState.LISTENING
                stt_recognizer.start_recording()
                console.print("[bold green]üé§ –°–ª—É—à–∞—é –∫–æ–º–∞–Ω–¥—É...[/bold green]")
                console.print("[yellow]üí° –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–±–µ–ª –∏ –≥–æ–≤–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É[/yellow]")
                
            elif event == "short_press":
                if state == AppState.SPEAKING:
                    # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–µ—á—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                    audio_player.stop_playback()
                    state = AppState.IDLE
                    console.print("[bold red]‚èπÔ∏è –†–µ—á—å –ø—Ä–µ—Ä–≤–∞–Ω–∞[/bold red]")
                elif state == AppState.LISTENING:
                    # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –∑–∞–ø–∏—Å—å –∫–æ–º–∞–Ω–¥—ã
                    stt_recognizer.stop_recording_and_recognize()
                    state = AppState.IDLE
                    console.print("[bold yellow]‚ö†Ô∏è –ó–∞–ø–∏—Å—å –∫–æ–º–∞–Ω–¥—ã –ø—Ä–µ—Ä–≤–∞–Ω–∞[/bold yellow]")
                else:
                    console.print("[yellow]‚ÑπÔ∏è –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω[/yellow]")
                    
            elif event == "space_released" and state == AppState.LISTENING:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—É—Å—Ç–∏–ª –ø—Ä–æ–±–µ–ª - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
                state = AppState.PROCESSING
                console.print("[bold blue]üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É...[/bold blue]")
                
                # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å
                command = stt_recognizer.stop_recording_and_recognize()
                
                if command and command.strip():
                    console.print(f"[bold green]üìù –ö–æ–º–∞–Ω–¥–∞: {command}[/bold green]")
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                    try:
                        await grpc_client.stream_audio(command)
                        state = AppState.IDLE
                        console.print("[bold green]‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞[/bold green]")
                    except Exception as e:
                        console.print(f"[bold red]‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}[/bold red]")
                        state = AppState.IDLE
                else:
                    console.print("[yellow]‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞[/yellow]")
                    state = AppState.IDLE
                    
    except KeyboardInterrupt:
        console.print("\n[bold yellow]üëã –í—ã—Ö–æ–¥...[/bold yellow]")
    except Exception as e:
        console.print(f"[bold red]‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}[/bold red]")
    finally:
        # –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        stt_recognizer.cleanup()
        if audio_player.is_playing:
            audio_player.stop_playback()
        logger.info("–ö–ª–∏–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        console.print("\n[bold yellow]üëã –í—ã—Ö–æ–¥...[/bold yellow]")
