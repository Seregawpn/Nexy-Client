import asyncio
import logging
from rich.console import Console
from enum import Enum
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))

from audio_player import AudioPlayer
from stt_recognizer import StreamRecognizer
from input_handler import InputHandler
from grpc_client import GrpcClient
from screen_capture import ScreenCapture
from utils.hardware_id import get_hardware_id, get_hardware_info

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

console = Console()

class AppState(Enum):
    IDLE = 1          # –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–ø–∏—Ç, –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤—ã–∫–ª—é—á–µ–Ω
    LISTENING = 2     # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É (–ø—Ä–æ–±–µ–ª –∑–∞–∂–∞—Ç)
    PROCESSING = 3    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
    SPEAKING = 4      # –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ–≤–æ—Ä–∏—Ç

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ —Å push-to-talk –ª–æ–≥–∏–∫–æ–π, –∑–∞—Ö–≤–∞—Ç–æ–º —ç–∫—Ä–∞–Ω–∞ –∏ Hardware ID"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    console.print("[bold blue]üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...[/bold blue]")
    
    # 1. –°–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º STT (–¥–æ gRPC)
    console.print("[blue]üé§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è STT...[/blue]")
    stt_recognizer = StreamRecognizer()
    
    # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞—Ö–≤–∞—Ç —ç–∫—Ä–∞–Ω–∞
    console.print("[blue]üì∏ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞—Ö–≤–∞—Ç–∞ —ç–∫—Ä–∞–Ω–∞...[/blue]")
    screen_capture = ScreenCapture()
    
    # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—É–¥–∏–æ –ø–ª–µ–µ—Ä
    console.print("[blue]üîä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ –ø–ª–µ–µ—Ä–∞...[/blue]")
    try:
        audio_player = AudioPlayer(sample_rate=48000)
        console.print("[bold green]‚úÖ –ê—É–¥–∏–æ –ø–ª–µ–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω[/bold green]")
    except Exception as e:
        console.print(f"[bold red]‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞—É–¥–∏–æ –ø–ª–µ–µ—Ä–∞: {e}[/bold red]")
        console.print("[yellow]‚ö†Ô∏è –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∑–≤—É–∫–∞[/yellow]")
        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –∞—É–¥–∏–æ –ø–ª–µ–µ—Ä–∞
        class AudioPlayerStub:
            def __init__(self):
                self.is_playing = False
                self.audio_error = True
                self.audio_error_message = str(e)
            
            def start_playback(self):
                console.print("[yellow]üîá –ê—É–¥–∏–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ[/yellow]")
            
            def stop_playback(self):
                pass
            
            def interrupt(self):
                pass
            
            def add_audio_chunk(self, audio_chunk):
                console.print(f"[dim]üîá –ê—É–¥–∏–æ —á–∞–Ω–∫ –ø–æ–ª—É—á–µ–Ω (–∑–≤—É–∫ –æ—Ç–∫–ª—é—á–µ–Ω): {len(audio_chunk)} —Å—ç–º–ø–ª–æ–≤[/dim]")
            
            def wait_for_queue_empty(self):
                pass
            
            def cleanup(self):
                pass
            
            def get_audio_status(self):
                return {'is_playing': False, 'has_error': True, 'error_message': str(e)}
        
        audio_player = AudioPlayerStub()
    
    # 4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º gRPC –∫–ª–∏–µ–Ω—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–º)
    console.print("[blue]üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è gRPC –∫–ª–∏–µ–Ω—Ç–∞...[/blue]")
    grpc_client = GrpcClient()
    
    # 5. –ü–æ–ª—É—á–∞–µ–º Hardware ID (–æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ, —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º)
    console.print("[blue]üÜî –ü–æ–ª—É—á–µ–Ω–∏–µ Hardware ID...[/blue]")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—ç—à–µ–º
    import sys
    force_regenerate = "--force-regenerate" in sys.argv
    clear_cache = "--clear-cache" in sys.argv
    
    if clear_cache:
        from utils.hardware_id import clear_hardware_id_cache
        clear_hardware_id_cache()
        console.print("[yellow]üóëÔ∏è –ö—ç—à Hardware ID –æ—á–∏—â–µ–Ω[/yellow]")
    
    hardware_id = get_hardware_id(force_regenerate=force_regenerate)  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫—ç—à –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    hardware_info = get_hardware_info()
    
    console.print(f"[bold green]‚úÖ Hardware ID –ø–æ–ª—É—á–µ–Ω: {hardware_id[:16]}...[/bold green]")
    console.print(f"[blue]üì± UUID: {hardware_info['hardware_uuid'][:16]}...[/blue]")
    console.print(f"[blue]üî¢ Serial: {hardware_info['serial_number']}[/blue]")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—ç—à–µ
    from utils.hardware_id import get_cache_info
    cache_info = get_cache_info()
    if cache_info['exists']:
        console.print(f"[green]üíæ Hardware ID –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –∫—ç—à–∞[/green]")
    else:
        console.print(f"[yellow]üîÑ Hardware ID —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∑–∞–Ω–æ–≤–æ[/yellow]")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫—ç—à–µ–º
    if "--help" in sys.argv:
        console.print("\n[yellow]üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—ç—à–µ–º Hardware ID:[/yellow]")
        console.print("[yellow]  ‚Ä¢ --clear-cache      - –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à[/yellow]")
        console.print("[yellow]  ‚Ä¢ --force-regenerate - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å ID[/yellow]")
        console.print("[yellow]  ‚Ä¢ --help            - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É[/yellow]")
        console.print("[yellow]  ‚Ä¢ –ë–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤    - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω[/yellow]")
    
    # –û—á–µ—Ä–µ–¥—å –¥–ª—è —Å–æ–±—ã—Ç–∏–π –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    event_queue = asyncio.Queue()
    loop = asyncio.get_running_loop()
    input_handler = InputHandler(loop, event_queue)
    
    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    state = AppState.IDLE
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    current_screenshot = None
    current_screen_info = None
    active_call = None
    streaming_task = None  # –ó–∞–¥–∞—á–∞ –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–∏–º–∞
    
    console.print("[bold green]‚úÖ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤![/bold green]")
    console.print("[yellow]üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:[/yellow]")
    console.print("[yellow]  ‚Ä¢ –ó–∞–∂–º–∏—Ç–µ –ø—Ä–æ–±–µ–ª ‚Üí –°–†–ê–ó–£ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –º–∏–∫—Ä–æ—Ñ–æ–Ω[/yellow]")
    console.print("[yellow]  ‚Ä¢ –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–±–µ–ª ‚Üí –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å[/yellow]")
    console.print("[yellow]  ‚Ä¢ –û—Ç–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–±–µ–ª ‚Üí –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å + –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã[/yellow]")
    console.print("[yellow]  ‚Ä¢ –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ ‚Üí –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞[/yellow]")
    console.print("[yellow]  ‚Ä¢ –ü—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç—Å—è —ç–∫—Ä–∞–Ω[/yellow]")
    console.print("[yellow]  ‚Ä¢ Hardware ID –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–æ–π[/yellow]")

    # --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–∏–º–∞ –≤ —Ñ–æ–Ω–µ ---
    async def consume_stream(stream_generator, player):
        nonlocal state, active_call, streaming_task
        loop = asyncio.get_running_loop()
        try:
            # –ü–æ—Ç—Ä–µ–±–ª—è–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ –∫–æ–Ω—Ü–∞
            async for _ in stream_generator:
                pass
            
            # –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: –∂–¥–µ–º, –ø–æ–∫–∞ –¥–æ–∏–≥—Ä–∞–µ—Ç –∞—É–¥–∏–æ
            await loop.run_in_executor(None, player.wait_for_queue_empty)
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ IDLE —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
            state = AppState.IDLE
            active_call = None
            streaming_task = None
            logger.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ –≤ IDLE –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ—á–∏.")
            console.print(f"[dim]‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ: {state.name}[/dim]")

        except asyncio.CancelledError:
            # –ü—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–¥–∞—á–∏, —Ç–æ—Ç, –∫—Ç–æ –µ–µ –æ—Ç–º–µ–Ω–∏–ª, –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
            # –ü—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –∏ –≤—ã—Ö–æ–¥–∏–º.
            logger.info("–ó–∞–¥–∞—á–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            console.print("[bold yellow]üîÑ –ó–∞–¥–∞—á–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞[/bold yellow]")
        except Exception as e:
            console.print(f"[bold red]‚ùå –û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–∏–º–∞: {e}[/bold red]")
            # –ü—Ä–∏ –æ—à–∏–±–∫–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            state = AppState.IDLE
            active_call = None
            streaming_task = None
            console.print(f"[dim]‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏: {state.name}[/dim]")
    # ---------------------------------------------------------

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–∫—Ä–∞–Ω–µ
        screen_info = screen_capture.get_screen_info()
        console.print(f"[bold blue]üì± –≠–∫—Ä–∞–Ω: {screen_info.get('width', 0)}x{screen_info.get('height', 0)} –ø–∏–∫—Å–µ–ª–µ–π[/bold blue]")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ gRPC —Å–µ—Ä–≤–µ—Ä—É (–ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤)
        console.print("[blue]üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...[/blue]")
        if not await grpc_client.connect():
            console.print("[bold red]‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É[/bold red]")
            return
            
        console.print("[bold green]‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É[/bold green]")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
        while True:
            try:
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                event = await asyncio.wait_for(event_queue.get(), timeout=0.1)
                
                # –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                console.print(f"[dim]üîç –°–æ—Å—Ç–æ—è–Ω–∏–µ: {state.name}[/dim]")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É–¥–∏–æ –∫–∞–∂–¥—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–±—ã—Ç–∏–π
                if hasattr(audio_player, 'get_audio_status'):
                    audio_status = audio_player.get_audio_status()
                    if audio_status.get('has_error'):
                        console.print(f"[dim]üîá –ê—É–¥–∏–æ —Å—Ç–∞—Ç—É—Å: {audio_status.get('error_message', '–û—à–∏–±–∫–∞')}[/dim]")

                if event == "start_recording":
                    # –õ—é–±–æ–µ –∑–∞–∂–∞—Ç–∏–µ –ø—Ä–æ–±–µ–ª–∞ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç —Ä–µ—á—å –∏ –°–†–ê–ó–£ –Ω–∞—á–∏–Ω–∞–µ—Ç –∑–∞–ø–∏—Å—å
                    if state == AppState.SPEAKING:
                        console.print("[bold yellow]üîá –ü—Ä–µ—Ä—ã–≤–∞—é —Ä–µ—á—å –∏ –Ω–∞—á–∏–Ω–∞—é –∑–∞–ø–∏—Å—å...[/bold yellow]")
                        
                        # –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
                        if streaming_task and not streaming_task.done():
                            streaming_task.cancel()
                            console.print("[yellow]üîÑ –ó–∞–¥–∞—á–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞[/yellow]")
                        
                        if active_call and not active_call.done():
                            active_call.cancel()
                            console.print("[yellow]üîÑ gRPC –≤—ã–∑–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω[/yellow]")
                        
                        # –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∞—É–¥–∏–æ
                        try:
                            audio_player.interrupt()
                            console.print("[green]‚úÖ –ê—É–¥–∏–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ[/green]")
                        except Exception as e:
                            console.print(f"[red]‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∞—É–¥–∏–æ: {e}[/red]")
                            # –ü—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É
                            try:
                                audio_player.force_stop()
                                console.print("[green]‚úÖ –ê—É–¥–∏–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ[/green]")
                            except Exception as e2:
                                console.print(f"[red]‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞—É–¥–∏–æ: {e2}[/red]")
                        
                        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                        active_call = None
                        streaming_task = None

                    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è
                    state = AppState.LISTENING
                    console.print(f"[dim]‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {state.name}[/dim]")

                    console.print("[bold blue]üì∏ –ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é —ç–∫—Ä–∞–Ω –≤ JPEG...[/bold blue]")
                    current_screenshot = screen_capture.capture_screen(quality=80)
                    current_screen_info = screen_info

                    if current_screenshot:
                        console.print(f"[bold green]‚úÖ JPEG —Å–∫—Ä–∏–Ω—à–æ—Ç –∑–∞—Ö–≤–∞—á–µ–Ω: {len(current_screenshot)} —Å–∏–º–≤–æ–ª–æ–≤ Base64[/bold green]")
                    else:
                        console.print("[bold yellow]‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ö–≤–∞—Ç–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç[/bold yellow]")

                    stt_recognizer.start_recording()
                    console.print("[bold green]üé§ –°–ª—É—à–∞—é –∫–æ–º–∞–Ω–¥—É...[/bold green]")
                    console.print("[yellow]üí° –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–±–µ–ª –∏ –≥–æ–≤–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É[/yellow]")

                elif event == "interrupt_or_cancel":
                    # –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ: –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç —Ä–µ—á—å –∏–ª–∏ –æ—Ç–º–µ–Ω—è–µ—Ç –∑–∞–ø–∏—Å—å
                    console.print(f"[blue]üîá –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ (—Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state.name})[/blue]")
                    
                    if state == AppState.SPEAKING:
                        console.print("[bold red]üîá –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞...[/bold red]")
                        
                        # –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
                        if streaming_task and not streaming_task.done():
                            streaming_task.cancel()
                            console.print("[yellow]üîÑ –ó–∞–¥–∞—á–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞[/yellow]")
                        
                        if active_call and not active_call.done():
                            active_call.cancel()
                            console.print("[yellow]üîÑ gRPC –≤—ã–∑–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω[/yellow]")
                        
                        # –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∞—É–¥–∏–æ
                        try:
                            audio_player.interrupt()
                            console.print("[green]‚úÖ –ê—É–¥–∏–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ[/green]")
                        except Exception as e:
                            console.print(f"[red]‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∞—É–¥–∏–æ: {e}[/red]")
                            # –ü—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É
                            try:
                                audio_player.force_stop()
                                console.print("[green]‚úÖ –ê—É–¥–∏–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ[/green]")
                            except Exception as e2:
                                console.print(f"[red]‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞—É–¥–∏–æ: {e2}[/red]")
                        
                        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                        state = AppState.IDLE
                        active_call = None
                        streaming_task = None
                        
                        console.print("[bold green]‚úÖ –†–µ—á—å –ø—Ä–µ—Ä–≤–∞–Ω–∞, –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –∫–æ–º–∞–Ω–¥–∞–º[/bold green]")

                    elif state == AppState.LISTENING:
                        console.print("[bold yellow]üö´ –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞ (–∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ)[/bold yellow]")
                        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å, –Ω–æ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        _ = stt_recognizer.stop_recording_and_recognize()
                        state = AppState.IDLE
                        
                    elif state == AppState.PROCESSING:
                        console.print("[bold yellow]üö´ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω–µ–Ω–∞[/bold yellow]")
                        state = AppState.IDLE
                        
                    else:
                        console.print("[blue]‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è[/blue]")
                        
                    console.print(f"[dim]‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {state.name}[/dim]")

                elif event == "stop_recording" and state == AppState.LISTENING:
                    # –î–ª–∏–Ω–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
                    state = AppState.PROCESSING
                    console.print("[bold blue]üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É...[/bold blue]")

                    command = stt_recognizer.stop_recording_and_recognize()

                    if command and command.strip():
                        console.print(f"[bold green]üìù –ö–æ–º–∞–Ω–¥–∞: {command}[/bold green]")

                        try:
                            stream_generator = grpc_client.stream_audio(
                                command,
                                current_screenshot,
                                current_screen_info,
                                hardware_id
                            )

                            active_call = await stream_generator.__anext__()
                            state = AppState.SPEAKING

                            streaming_task = asyncio.create_task(consume_stream(stream_generator, audio_player))

                        except Exception as e:
                            console.print(f"[bold red]‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}[/bold red]")
                            state = AppState.IDLE
                            console.print(f"[dim]‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ: {state.name}[/dim]")
                    else:
                        console.print("[yellow]‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞[/yellow]")
                        state = AppState.IDLE
                        console.print(f"[dim]‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ: {state.name}[/dim]")
                        
            except asyncio.TimeoutError:
                # –¢–∞–π–º–∞—É—Ç –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                pass
            except KeyboardInterrupt:
                console.print("\n[bold yellow]üëã –í—ã—Ö–æ–¥...[/bold yellow]")
                break # –í—ã—Ö–æ–¥–∏–º –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–∏
            except Exception as e:
                console.print(f"[bold red]‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}[/bold red]")
                break # –í—ã—Ö–æ–¥–∏–º –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ
    finally:
        if streaming_task and not streaming_task.done():
            streaming_task.cancel()
        if active_call and not active_call.done():
            active_call.cancel()
        stt_recognizer.cleanup()
        if audio_player.is_playing:
            audio_player.stop_playback()
        logger.info("–ö–ª–∏–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        console.print("\n[bold yellow]üëã –í—ã—Ö–æ–¥...[/bold yellow]")

