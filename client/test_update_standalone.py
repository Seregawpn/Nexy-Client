#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ç–µ—Å—Ç –º–æ–¥—É–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import asyncio
import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

# –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
class MockEventBus:
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è EventBus"""
    
    def __init__(self):
        self.subscribers = {}
    
    async def publish(self, event_type, data):
        print(f"üì¢ EventBus: {event_type} - {data}")
    
    def subscribe(self, event_type, callback, priority=None):
        if event_type not in self.subscribers:
            self.subscribers[event_type] = []
        self.subscribers[event_type].append(callback)
        print(f"üìù –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ: {event_type}")

class MockStateManager:
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è ApplicationStateManager"""
    
    def __init__(self):
        self.current_mode = "SLEEPING"
    
    def get_current_mode(self):
        return self.current_mode
    
    def set_mode(self, mode):
        self.current_mode = mode

class MockErrorHandler:
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è ErrorHandler"""
    
    def __init__(self, event_bus):
        self.event_bus = event_bus
    
    def handle_error(self, error, severity, category, context):
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {context}: {error}")

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
from modules.update_manager import UpdateManager, UpdateConfig, UpdateStatus

async def test_update_manager_standalone():
    """–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ç–µ—Å—Ç –º–æ–¥—É–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    print("üß™ –ê–í–¢–û–ù–û–ú–ù–´–ô –¢–ï–°–¢ –ú–û–î–£–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–ô")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏
    event_bus = MockEventBus()
    state_manager = MockStateManager()
    error_handler = MockErrorHandler(event_bus)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    config = UpdateConfig(
        enabled=True,
        check_interval=1,  # 1 —á–∞—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        check_time="02:00",
        auto_install=True,
        announce_updates=False,  # –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º
        check_on_startup=True,
        appcast_url="https://your-server.com/appcast.xml",
        retry_attempts=3,
        retry_delay=300,
        silent_mode=True,  # –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ç–∏—Ö–∏–π —Ä–µ–∂–∏–º
        log_updates=True
    )
    
    print(f"üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   - –í–∫–ª—é—á–µ–Ω: {config.enabled}")
    print(f"   - –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: {config.check_interval} —á–∞—Å–æ–≤")
    print(f"   - –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {config.check_time}")
    print(f"   - –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞: {config.auto_install}")
    print(f"   - –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º: {config.silent_mode}")
    print(f"   - URL –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {config.appcast_url}")
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    update_manager = UpdateManager(
        config=config,
        event_bus=event_bus,
        state_manager=state_manager
    )
    
    print(f"\n‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω")
    print(f"üìä –°—Ç–∞—Ç—É—Å: {update_manager.get_current_status().value}")
    print(f"üîß –í–∫–ª—é—á–µ–Ω: {update_manager.is_enabled()}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    print(f"\nüîß –¢–µ—Å—Ç–∏—Ä—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...")
    await update_manager.start()
    print(f"‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    update_info = await update_manager.check_for_updates()
    
    if update_info:
        print(f"üì¶ –î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:")
        print(f"   - –í–µ—Ä—Å–∏—è: {update_info.version}")
        print(f"   - Build: {update_info.build_number}")
        print(f"   - –û–ø–∏—Å–∞–Ω–∏–µ: {update_info.release_notes}")
        print(f"   - –†–∞–∑–º–µ—Ä: {update_info.file_size} –±–∞–π—Ç")
        print(f"   - URL: {update_info.download_url}")
    else:
        print("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    print(f"üìä –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏: {update_manager.get_current_status().value}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    available_update = update_manager.get_available_update()
    if available_update:
        print(f"üì¶ –î–æ—Å—Ç—É–ø–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {available_update.version}")
    else:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–º–µ–Ω—É —Ä–µ–∂–∏–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä—É—é —Å–º–µ–Ω—É —Ä–µ–∂–∏–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    print(f"–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {state_manager.get_current_mode()}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    state_manager.set_mode("LISTENING")
    print(f"–ù–æ–≤—ã–π —Ä–µ–∂–∏–º: {state_manager.get_current_mode()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
    can_check = await update_manager._can_check_updates()
    print(f"–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ: {can_check}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
    state_manager.set_mode("SLEEPING")
    print(f"–†–µ–∂–∏–º –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞: {state_manager.get_current_mode()}")
    
    can_check = await update_manager._can_check_updates()
    print(f"–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Å–ø—è—â–µ–º —Ä–µ–∂–∏–º–µ: {can_check}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É
    print(f"\n‚èπÔ∏è –¢–µ—Å—Ç–∏—Ä—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É...")
    await update_manager.stop()
    print(f"‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    print(f"\n‚úÖ –ê–í–¢–û–ù–û–ú–ù–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(test_update_manager_standalone())