#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ AppleEvent termination
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å–æ–≥–ª–∞—à–∞–µ—Ç—Å—è –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
"""

import os
import re

def test_termination_handling():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ AppleEvent termination –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ AppleEvent termination...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º menu_handler.py
    handler_path = "modules/tray_controller/macos/menu_handler.py"
    if not os.path.exists(handler_path):
        print("‚ùå menu_handler.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(handler_path, 'r') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    if "applicationShouldTerminate" in content:
        print("‚úÖ applicationShouldTerminate –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ùå applicationShouldTerminate –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è False
    if "return False" in content:
        print("‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è False –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
    else:
        print("‚ùå –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è False")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º callback –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    if "_quit_callback" in content:
        print("‚úÖ Callback –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ùå Callback –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    return True

def test_tray_controller_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ TrayControllerIntegration –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ TrayControllerIntegration...")
    
    integration_path = "integration/integrations/tray_controller_integration.py"
    if not os.path.exists(integration_path):
        print("‚ùå TrayControllerIntegration –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(integration_path, 'r') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ _on_system_quit
    if "_on_system_quit" in content:
        print("‚úÖ _on_system_quit –Ω–∞–π–¥–µ–Ω –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    else:
        print("‚ùå _on_system_quit –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É callback
    if "set_quit_callback" in content:
        print("‚úÖ set_quit_callback –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
    else:
        print("‚ùå set_quit_callback –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
        return False
    
    return True

def test_quit_event_handling():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É quit —Å–æ–±—ã—Ç–∏–π"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ quit —Å–æ–±—ã—Ç–∏–π...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º TrayController
    controller_path = "modules/tray_controller/core/tray_controller.py"
    if not os.path.exists(controller_path):
        print("‚ùå TrayController –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(controller_path, 'r') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º _on_quit_clicked
    if "_on_quit_clicked" in content:
        print("‚úÖ _on_quit_clicked –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ùå _on_quit_clicked –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å–æ–±—ã—Ç–∏—è
    if "quit_clicked" in content:
        print("‚úÖ –°–æ–±—ã—Ç–∏–µ quit_clicked –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è")
    else:
        print("‚ùå –°–æ–±—ã—Ç–∏–µ quit_clicked –Ω–µ –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è")
        return False
    
    return True

def test_app_shutdown_event():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–±—ã—Ç–∏—è app.shutdown"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±—ã—Ç–∏—è app.shutdown...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SimpleModuleCoordinator
    coordinator_path = "integration/core/simple_module_coordinator.py"
    if not os.path.exists(coordinator_path):
        print("‚ùå SimpleModuleCoordinator –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(coordinator_path, 'r') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é app.shutdown
    if "app.shutdown" in content:
        print("‚úÖ –°–æ–±—ã—Ç–∏–µ app.shutdown –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è")
    else:
        print("‚ùå –°–æ–±—ã—Ç–∏–µ app.shutdown –Ω–µ –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è")
        return False
    
    return True

if __name__ == "__main__":
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–ë–†–ê–ë–û–¢–ö–ò APPLEEVENT TERMINATION")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ termination
    termination_ok = test_termination_handling()
    
    # –¢–µ—Å—Ç 2: TrayControllerIntegration
    integration_ok = test_tray_controller_integration()
    
    # –¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ quit —Å–æ–±—ã—Ç–∏–π
    quit_events_ok = test_quit_event_handling()
    
    # –¢–µ—Å—Ç 4: –°–æ–±—ã—Ç–∏–µ app.shutdown
    shutdown_event_ok = test_app_shutdown_event()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ termination: {'‚úÖ –û–ö' if termination_ok else '‚ùå –ù–ï –û–ö'}")
    print(f"TrayControllerIntegration: {'‚úÖ –û–ö' if integration_ok else '‚ùå –ù–ï –û–ö'}")
    print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ quit —Å–æ–±—ã—Ç–∏–π: {'‚úÖ –û–ö' if quit_events_ok else '‚ùå –ù–ï –û–ö'}")
    print(f"–°–æ–±—ã—Ç–∏–µ app.shutdown: {'‚úÖ –û–ö' if shutdown_event_ok else '‚ùå –ù–ï –û–ö'}")
    
    if termination_ok and integration_ok and quit_events_ok and shutdown_event_ok:
        print("\nüéâ –¢–†–ï–¢–¨–Ø –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!")
        print("‚úÖ AppleEvent termination –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    else:
        print("\n‚ö†Ô∏è –¢–†–ï–¢–¨–Ø –ü–†–û–ë–õ–ï–ú–ê –ù–ï –†–ï–®–ï–ù–ê!")
        print("‚ùå –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
