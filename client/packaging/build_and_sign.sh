#!/bin/bash

# üì¶ Nexy AI Assistant - –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ –∏ –ø–æ–¥–ø–∏—Å—å
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./packaging/build_and_sign.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
IDENTITY="Developer ID Application: Sergiy Zasorin (5NKLL2CLB9)"
ENTITLEMENTS="packaging/entitlements.plist"
APP_NAME="Nexy"
BUNDLE_ID="com.nexy.assistant"
VERSION="1.0.0"

# –ü—É—Ç–∏
CLIENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
DIST_DIR="$CLIENT_DIR/dist"
CLEAN_APP="/tmp/${APP_NAME}Clean.app"
TEMP_PKG="/tmp/nexy_pkg"

echo -e "${BLUE}üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–ø–∞–∫–æ–≤–∫—É Nexy AI Assistant${NC}"
echo "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $CLIENT_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
check_command() {
    if ! command -v "$1" &> /dev/null; then
        error "–ö–æ–º–∞–Ω–¥–∞ '$1' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã."
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã...${NC}"
check_command "python3"
check_command "codesign"
check_command "pkgbuild"
check_command "productbuild"
check_command "ditto"
check_command "xattr"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º PyInstaller —á–µ—Ä–µ–∑ python3 -m
if ! python3 -m PyInstaller --version &> /dev/null; then
    error "PyInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pyinstaller"
fi

# –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ –∏ —Å–±–æ—Ä–∫–∞
echo -e "${BLUE}üßπ –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ –∏ —Å–±–æ—Ä–∫–∞${NC}"
cd "$CLIENT_DIR"

log "–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã..."
rm -rf dist/ build/ *.pyc __pycache__/
find . -name "*.pyc" -delete
find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

log "–°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å PyInstaller..."
python3 -m PyInstaller packaging/Nexy.spec --noconfirm --clean

if [ ! -d "dist/$APP_NAME.app" ]; then
    error "–°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ PyInstaller."
fi

log "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"

# –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–π –∫–æ–ø–∏–∏
echo -e "${BLUE}üìã –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–π –∫–æ–ø–∏–∏${NC}"

log "–°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—É—é –∫–æ–ø–∏—é –±–µ–∑ extended attributes..."
rm -rf "$CLEAN_APP"
ditto --noextattr --noqtn "dist/$APP_NAME.app" "$CLEAN_APP"

log "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ extended attributes..."
xattr -cr "$CLEAN_APP" || true
find "$CLEAN_APP" -name '._*' -type f -delete

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—á–∏—Å—Ç–∫—É extended attributes..."
if xattr -lr "$CLEAN_APP" | grep -q "com.apple.FinderInfo\|com.apple.ResourceFork\|com.apple.quarantine"; then
    warn "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ extended attributes, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
else
    log "Extended attributes —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã"
fi

# –®–∞–≥ 3: –ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${BLUE}üîê –®–∞–≥ 3: –ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è${NC}"

log "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∏..."
codesign --remove-signature "$CLEAN_APP" 2>/dev/null || true
find "$CLEAN_APP/Contents" -type f -perm -111 -exec codesign --remove-signature {} \; 2>/dev/null || true

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ Mach-O —Ñ–∞–π–ª—ã..."
while IFS= read -r -d '' BIN; do
    if file -b "$BIN" | grep -q "Mach-O"; then
        echo "  –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º: $BIN"
        codesign --force --timestamp --options=runtime \
            --entitlements "$ENTITLEMENTS" \
            --sign "$IDENTITY" "$BIN"
    fi
done < <(find "$CLEAN_APP/Contents/Frameworks" "$CLEAN_APP/Contents/MacOS" -type f -perm -111 -print0 2>/dev/null)

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤–µ—Å—å –±–∞–Ω–¥–ª..."
codesign --force --timestamp --options=runtime \
    --entitlements "$ENTITLEMENTS" \
    --sign "$IDENTITY" "$CLEAN_APP"

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏
echo -e "${BLUE}üîç –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏${NC}"

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
if codesign --verify --deep --strict --verbose=2 "$CLEAN_APP"; then
    log "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º spctl..."
if spctl --assess --type execute --verbose "$CLEAN_APP" 2>/dev/null; then
    log "spctl –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
else
    warn "spctl –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–ø—Ä–æ–Ω–æ—Ç–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)"
fi

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º entitlements..."
codesign -d --entitlements - "$CLEAN_APP"

# –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ PKG
echo -e "${BLUE}üì¶ –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ PKG${NC}"

log "–°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è PKG..."
rm -rf "$TEMP_PKG"
mkdir -p "$TEMP_PKG"
cp -R "$CLEAN_APP" "$TEMP_PKG/$APP_NAME.app"

log "–°–æ–∑–¥–∞–µ–º component PKG..."
pkgbuild --root "$TEMP_PKG" \
    --identifier "$BUNDLE_ID" \
    --version "$VERSION" \
    --install-location /Applications \
    "$DIST_DIR/$APP_NAME-raw.pkg"

log "–°–æ–∑–¥–∞–µ–º distribution PKG..."
productbuild --package-path "$DIST_DIR" \
    --distribution packaging/distribution.xml \
    "$DIST_DIR/$APP_NAME-signed.pkg"

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º PKG..."
codesign --force --timestamp --deep \
    --sign "$IDENTITY" \
    "$DIST_DIR/$APP_NAME-signed.pkg"

# –®–∞–≥ 6: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo -e "${BLUE}‚úÖ –®–∞–≥ 6: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞${NC}"

log "–ö–æ–ø–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ dist..."
cp -R "$CLEAN_APP" "$DIST_DIR/$APP_NAME-signed.app"

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã..."
echo "=== –ü–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ==="
ls -la "$DIST_DIR/$APP_NAME-signed.app/Contents/MacOS/$APP_NAME"

echo "=== PKG —Ñ–∞–π–ª ==="
ls -la "$DIST_DIR/$APP_NAME-signed.pkg"

echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ==="
codesign -v "$DIST_DIR/$APP_NAME-signed.app"

echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ PKG ==="
codesign -v "$DIST_DIR/$APP_NAME-signed.pkg"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
log "–û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
rm -rf "$CLEAN_APP" "$TEMP_PKG"

echo -e "${GREEN}üéâ –£–ø–∞–∫–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${NC}"
echo -e "${BLUE}üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:${NC}"
echo "  ‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $DIST_DIR/$APP_NAME-signed.app"
echo "  ‚Ä¢ PKG: $DIST_DIR/$APP_NAME-signed.pkg"
echo ""
echo -e "${YELLOW}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo "  1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $DIST_DIR/$APP_NAME-signed.app"
echo "  2. –î–ª—è –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: xcrun notarytool submit"
echo "  3. –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $DIST_DIR/$APP_NAME-signed.pkg"
