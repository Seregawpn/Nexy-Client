#!/bin/bash

# üì¶ Nexy AI Assistant - –§–∏–Ω–∞–ª—å–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ –∏ –ø–æ–¥–ø–∏—Å—å (–û–ë–ù–û–í–õ–ï–ù–û 24.09.2025)
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./packaging/build_final.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫—É

# –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê –û–¢ EXTENDED ATTRIBUTES
export COPYFILE_DISABLE=1  # –û—Ç–∫–ª—é—á–∞–µ—Ç AppleDouble (._*) –∏ resource fork –ø—Ä–∏ copy/tar/rsync

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
IDENTITY="Developer ID Application: Sergiy Zasorin (5NKLL2CLB9)"
INSTALLER_IDENTITY="Developer ID Installer: Sergiy Zasorin (5NKLL2CLB9)"
ENTITLEMENTS="packaging/entitlements.plist"
APP_NAME="Nexy"
BUNDLE_ID="com.nexy.assistant"
VERSION="1.0.0"

# –ü—É—Ç–∏
CLIENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
DIST_DIR="$CLIENT_DIR/dist"
CLEAN_APP="/tmp/${APP_NAME}.app"

echo -e "${BLUE}üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —É–ø–∞–∫–æ–≤–∫—É Nexy AI Assistant${NC}"
echo "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $CLIENT_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è (–±–µ–∑ extended attributes)
safe_copy() {
    # $1 = src, $2 = dst
    /usr/bin/ditto --noextattr --noqtn "$1" "$2"
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    xattr -cr "$2" 2>/dev/null || true
    find "$2" -name '._*' -delete 2>/dev/null || true
    find "$2" -name '.DS_Store' -delete 2>/dev/null || true
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—á–∏—Å—Ç–∫–∏ extended attributes
clean_xattrs() {
    local app_path="$1"
    local stage="$2"
    
    # –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ extended attributes
    xattr -cr "$app_path" || true
    find "$app_path" -name '._*' -type f -delete || true
    find "$app_path" -name '.DS_Store' -type f -delete || true
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤
    xattr -d com.apple.FinderInfo "$app_path" 2>/dev/null || true
    xattr -d com.apple.ResourceFork "$app_path" 2>/dev/null || true
    xattr -d com.apple.quarantine "$app_path" 2>/dev/null || true
    xattr -d com.apple.metadata:kMDItemWhereFroms "$app_path" 2>/dev/null || true
    xattr -d com.apple.metadata:kMDItemDownloadedDate "$app_path" 2>/dev/null || true
    
    # –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
    find "$app_path" -type f -exec xattr -c {} \; 2>/dev/null || true
    find "$app_path" -type d -exec xattr -c {} \; 2>/dev/null || true
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º, –Ω–æ –Ω–µ –≤–∞–ª–∏–º —Å–±–æ—Ä–∫—É
    if xattr -pr com.apple.FinderInfo "$app_path" 2>/dev/null | grep -q .; then
        warn "FinderInfo –æ—Å—Ç–∞–ª—Å—è –Ω–∞ —ç—Ç–∞–ø–µ $stage (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è macOS)"
    fi
    if xattr -pr com.apple.ResourceFork "$app_path" 2>/dev/null | grep -q .; then
        warn "ResourceFork –æ—Å—Ç–∞–ª—Å—è –Ω–∞ —ç—Ç–∞–ø–µ $stage (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è macOS)"
    fi
    if find "$app_path" -name '._*' | grep -q .; then
        warn "AppleDouble (._*) —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —ç—Ç–∞–ø–µ $stage (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è macOS)"
    fi
}

warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
check_command() {
    if ! command -v "$1" &> /dev/null; then
        error "–ö–æ–º–∞–Ω–¥–∞ '$1' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã."
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã...${NC}"
check_command "python3"
check_command "codesign"
check_command "pkgbuild"
check_command "productbuild"
check_command "productsign"
check_command "ditto"
check_command "xattr"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º PyInstaller
if ! command -v pyinstaller &> /dev/null; then
    error "PyInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: brew install pyinstaller"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã...${NC}"
if ! security find-identity -v -p codesigning | grep -q "Developer ID Application"; then
    error "Developer ID Application —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if ! security find-identity -v -p basic | grep -q "Developer ID Installer"; then
    error "Developer ID Installer —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ –∏ —Å–±–æ—Ä–∫–∞
echo -e "${BLUE}üßπ –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ –∏ —Å–±–æ—Ä–∫–∞${NC}"
cd "$CLIENT_DIR"

log "–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã..."
# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞: —É–¥–∞–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –∞ –Ω–µ —Å–∞–º–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
rm -rf dist/* dist/.* build/* build/.* *.pyc __pycache__/ 2>/dev/null || true
find . -name "*.pyc" -delete 2>/dev/null || true
find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

log "–°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å PyInstaller..."
# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º venv –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≤–µ—Ä—Å–∏–π –ø–∞–∫–µ—Ç–æ–≤ (protobuf 6.32.1)
source "$CLIENT_DIR/venv/bin/activate"
pyinstaller packaging/Nexy.spec --noconfirm --clean

if [ ! -d "dist/$APP_NAME.app" ]; then
    error "–°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ PyInstaller."
fi

log "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"

    # –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –ß–ò–°–¢–û–ô –∫–æ–ø–∏–∏ (–ö–†–ò–¢–ò–ß–ù–û!)
    echo -e "${BLUE}üìã –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–π –∫–æ–ø–∏–∏${NC}"
    
    log "–û—á–∏—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç extended attributes..."
    clean_xattrs "dist/$APP_NAME.app" "–∏—Å—Ö–æ–¥–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    
    log "–°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–∏—Å—Ç—É—é –∫–æ–ø–∏—é –±–µ–∑ extended attributes..."
    rm -rf "$CLEAN_APP"
    safe_copy "dist/$APP_NAME.app" "$CLEAN_APP"
    
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—á–∏—â–∞–µ–º extended attributes –≤ –∫–æ–ø–∏–∏..."
    clean_xattrs "$CLEAN_APP" "—Å–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–π –∫–æ–ø–∏–∏"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    log "–í—ã–ø–æ–ª–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É extended attributes..."
    xattr -d com.apple.FinderInfo "$CLEAN_APP" 2>/dev/null || true
    xattr -d com.apple.ResourceFork "$CLEAN_APP" 2>/dev/null || true
    xattr -d com.apple.quarantine "$CLEAN_APP" 2>/dev/null || true
    xattr -cr "$CLEAN_APP" || true
    find "$CLEAN_APP" -name '._*' -delete || true
    find "$CLEAN_APP" -name '.DS_Store' -delete || true
    
    log "Extended attributes —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã"

# –®–∞–≥ 3: –ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–û–†–Ø–î–û–ö!)
echo -e "${BLUE}üîê –®–∞–≥ 3: –ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è${NC}"

log "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∏..."
codesign --remove-signature "$CLEAN_APP" 2>/dev/null || true
# –£–¥–∞–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∏ —Å–æ –≤—Å–µ—Ö –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ Contents (–≤–∫–ª—é—á–∞—è Resources)
find "$CLEAN_APP/Contents" -type f -perm -111 -exec codesign --remove-signature {} \; 2>/dev/null || true

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ Mach-O —Ñ–∞–π–ª—ã (–°–ù–ê–ß–ê–õ–ê!)..."
# –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ë–ï–ó entitlements
while IFS= read -r -d '' BIN; do
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π executable - –µ–≥–æ –ø–æ–¥–ø–∏—à–µ–º –ø–æ—Ç–æ–º
    if [[ "$BIN" == *"/Contents/MacOS/$APP_NAME" ]]; then
        continue
    fi
    if file -b "$BIN" | grep -q "Mach-O"; then
        echo "  –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É: $(basename $BIN)"
        codesign --force --timestamp --options=runtime \
            --sign "$IDENTITY" "$BIN" || true
    fi
done < <(find "$CLEAN_APP/Contents" -type f -perm -111 -print0 2>/dev/null)

# –Ø–≤–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π ffmpeg, –µ—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç (Frameworks)
FFMPEG_BIN="$CLEAN_APP/Contents/Frameworks/resources/ffmpeg/ffmpeg"
if [ -f "$FFMPEG_BIN" ]; then
    echo "  –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π ffmpeg: $FFMPEG_BIN"
    codesign --force --timestamp --options=runtime \
        --sign "$IDENTITY" "$FFMPEG_BIN" || true
fi

# –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º SwitchAudioSource –µ—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
SWITCHAUDIO_BIN="$CLEAN_APP/Contents/Resources/resources/audio/SwitchAudioSource"
if [ -f "$SWITCHAUDIO_BIN" ]; then
    echo "  –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º SwitchAudioSource: $SWITCHAUDIO_BIN"
    codesign --force --timestamp --options=runtime \
        --sign "$IDENTITY" "$SWITCHAUDIO_BIN" || true
fi

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π executable —Å entitlements..."
MAIN_EXE="$CLEAN_APP/Contents/MacOS/$APP_NAME"
codesign --force --timestamp --options=runtime \
    --entitlements "$ENTITLEMENTS" \
    --sign "$IDENTITY" "$MAIN_EXE"

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤–µ—Å—å –±–∞–Ω–¥–ª (–§–ò–ù–ê–õ!)..."
codesign --force --timestamp --options=runtime \
    --entitlements "$ENTITLEMENTS" \
    --sign "$IDENTITY" "$CLEAN_APP"

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${BLUE}üîç –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è${NC}"

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
if codesign --verify --deep --strict --verbose=2 "$CLEAN_APP"; then
    log "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º spctl..."
if spctl --assess --type execute --verbose "$CLEAN_APP" 2>/dev/null; then
    log "spctl –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
else
    warn "spctl –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–ø—Ä–æ–Ω–æ—Ç–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)"
fi

# –®–∞–≥ 5: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${BLUE}üì§ –®–∞–≥ 5: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è${NC}"

log "–°–æ–∑–¥–∞–µ–º ZIP –¥–ª—è –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏..."
ditto -c -k --noextattr --noqtn "$CLEAN_APP" "$DIST_DIR/$APP_NAME-app-for-notarization.zip"

log "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—é..."
xcrun notarytool submit "$DIST_DIR/$APP_NAME-app-for-notarization.zip" \
    --keychain-profile "nexy-notary" \
    --apple-id "seregawpn@gmail.com" \
    --wait

log "–ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—É—é –ø–µ—á–∞—Ç—å..."
xcrun stapler staple "$CLEAN_APP"

# –®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ DMG
echo -e "${BLUE}üíø –®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ DMG${NC}"

DMG_PATH="$DIST_DIR/$APP_NAME.dmg"
TEMP_DMG="$DIST_DIR/$APP_NAME-temp.dmg"
VOLUME_NAME="$APP_NAME"

log "–°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π DMG..."
APP_SIZE_KB=$(du -sk "$CLEAN_APP" | awk '{print $1}')
DMG_SIZE_MB=$(( APP_SIZE_KB/1024 + 200 ))

hdiutil create -volname "$VOLUME_NAME" -srcfolder "$CLEAN_APP" \
    -fs HFS+ -format UDRW -size "${DMG_SIZE_MB}m" "$TEMP_DMG"

MOUNT_DIR="/Volumes/$VOLUME_NAME"
hdiutil attach "$TEMP_DMG" -readwrite -noverify -noautoopen >/dev/null
ln -s /Applications "$MOUNT_DIR/Applications" || true
hdiutil detach "$MOUNT_DIR" >/dev/null

log "–§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º DMG..."
rm -f "$DMG_PATH"
hdiutil convert "$TEMP_DMG" -format UDZO -imagekey zlib-level=9 -o "$DMG_PATH" >/dev/null
rm -f "$TEMP_DMG"

log "DMG —Å–æ–∑–¥–∞–Ω: $DMG_PATH"

# –®–∞–≥ 7: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è DMG
echo -e "${BLUE}üì§ –®–∞–≥ 7: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è DMG${NC}"

log "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º DMG –Ω–∞ –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—é..."
xcrun notarytool submit "$DMG_PATH" \
    --keychain-profile "nexy-notary" \
    --apple-id "seregawpn@gmail.com" \
    --wait

log "–ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—É—é –ø–µ—á–∞—Ç—å –∫ DMG..."
xcrun stapler staple "$DMG_PATH"

# –®–∞–≥ 8: –°–æ–∑–¥–∞–Ω–∏–µ PKG (–ü–†–ê–í–ò–õ–¨–ù–´–ô –°–ü–û–°–û–ë!)
echo -e "${BLUE}üì¶ –®–∞–≥ 8: –°–æ–∑–¥–∞–Ω–∏–µ PKG${NC}"

log "–°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è PKG..."
rm -rf /tmp/nexy_pkg_clean_final
mkdir -p /tmp/nexy_pkg_clean_final

log "–ö–æ–ø–∏—Ä—É–µ–º –Ω–æ—Ç–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É..."
mkdir -p /tmp/nexy_pkg_clean_final/Applications
safe_copy "$CLEAN_APP" /tmp/nexy_pkg_clean_final/Applications/$APP_NAME.app
clean_xattrs "/tmp/nexy_pkg_clean_final/Applications/$APP_NAME.app" "—Å–æ–∑–¥–∞–Ω–∏–µ PKG"

log "–°–æ–∑–¥–∞–µ–º component PKG..."
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ –∫–æ—Ä–µ–Ω—å, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –≤ –ø–∞–ø–∫–µ Applications/
INSTALL_LOCATION="/"
log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤: $INSTALL_LOCATION (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –≤ Applications/)"

pkgbuild --root /tmp/nexy_pkg_clean_final \
    --identifier "${BUNDLE_ID}.pkg" \
    --version "$VERSION" \
    --install-location "$INSTALL_LOCATION" \
    "$DIST_DIR/$APP_NAME-raw.pkg"

log "–°–æ–∑–¥–∞–µ–º distribution PKG..."
productbuild --package-path "$DIST_DIR" \
    --distribution packaging/distribution.xml \
    "$DIST_DIR/$APP_NAME-distribution.pkg"

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º PKG –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º..."
productsign --sign "$INSTALLER_IDENTITY" \
    "$DIST_DIR/$APP_NAME-distribution.pkg" \
    "$DIST_DIR/$APP_NAME.pkg"

# –®–∞–≥ 9: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è PKG
echo -e "${BLUE}üì§ –®–∞–≥ 9: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è PKG${NC}"

log "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º PKG –Ω–∞ –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—é..."
xcrun notarytool submit "$DIST_DIR/$APP_NAME.pkg" \
    --keychain-profile "nexy-notary" \
    --apple-id "seregawpn@gmail.com" \
    --wait

log "–ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—É—é –ø–µ—á–∞—Ç—å –∫ PKG..."
xcrun stapler staple "$DIST_DIR/$APP_NAME.pkg"

    # –®–∞–≥ 10: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    echo -e "${BLUE}‚úÖ –®–∞–≥ 10: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞${NC}"
    
    log "–ö–æ–ø–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ dist..."
    safe_copy "$CLEAN_APP" "$DIST_DIR/$APP_NAME-final.app"
    clean_xattrs "$DIST_DIR/$APP_NAME-final.app" "—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–ø–∏—è"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    log "–í—ã–ø–æ–ª–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É extended attributes..."
    xattr -d com.apple.FinderInfo "$DIST_DIR/$APP_NAME-final.app" 2>/dev/null || true
    xattr -d com.apple.ResourceFork "$DIST_DIR/$APP_NAME-final.app" 2>/dev/null || true
    xattr -d com.apple.quarantine "$DIST_DIR/$APP_NAME-final.app" 2>/dev/null || true
    xattr -d com.apple.metadata:kMDItemWhereFroms "$DIST_DIR/$APP_NAME-final.app" 2>/dev/null || true
    xattr -d com.apple.metadata:kMDItemDownloadedDate "$DIST_DIR/$APP_NAME-final.app" 2>/dev/null || true
    xattr -cr "$DIST_DIR/$APP_NAME-final.app" || true
    find "$DIST_DIR/$APP_NAME-final.app" -name '._*' -delete || true
    find "$DIST_DIR/$APP_NAME-final.app" -name '.DS_Store' -delete || true
    find "$DIST_DIR/$APP_NAME-final.app" -type f -exec xattr -c {} \; 2>/dev/null || true
    find "$DIST_DIR/$APP_NAME-final.app" -type d -exec xattr -c {} \; 2>/dev/null || true

echo "=== –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ê–†–¢–ï–§–ê–ö–¢–û–í ==="
echo ""

echo "1. –ü–†–ò–õ–û–ñ–ï–ù–ò–ï:"
if codesign --verify --deep --strict --verbose=2 "$DIST_DIR/$APP_NAME-final.app"; then
    log "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

if xcrun stapler validate "$DIST_DIR/$APP_NAME-final.app"; then
    log "–ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

echo ""
echo "2. PKG:"
if pkgutil --check-signature "$DIST_DIR/$APP_NAME.pkg"; then
    log "–ü–æ–¥–ø–∏—Å—å PKG –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ü–æ–¥–ø–∏—Å—å PKG –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

if xcrun stapler validate "$DIST_DIR/$APP_NAME.pkg"; then
    log "–ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è PKG –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è PKG –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

echo ""
echo "3. –ü–†–û–í–ï–†–ö–ê –°–û–î–ï–†–ñ–ò–ú–û–ì–û PKG:"
pkgutil --expand "$DIST_DIR/$APP_NAME.pkg" /tmp/nexy_final_check

# –ù–∞—Ö–æ–¥–∏–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π component PKG –≤–Ω—É—Ç—Ä–∏ distribution PKG
NESTED_PKG_DIR=$(find /tmp/nexy_final_check -maxdepth 2 -type d -name "*.pkg" | head -n1)
if [ -z "$NESTED_PKG_DIR" ]; then
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–π .pkg –≤–Ω—É—Ç—Ä–∏ distribution PKG"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º install-location –≤ PackageInfo
if [ ! -f "$NESTED_PKG_DIR/PackageInfo" ]; then
    error "PackageInfo –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º PKG"
fi

PKG_INSTALL_LOCATION=$(grep -o 'install-location="[^"]*"' "$NESTED_PKG_DIR/PackageInfo" | sed 's/install-location="\(.*\)"/\1/')
echo "install-location –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º PKG: ${PKG_INSTALL_LOCATION}"
if [ "$PKG_INSTALL_LOCATION" != "/" ]; then
    error "–ù–µ–≤–µ—Ä–Ω—ã–π install-location: ${PKG_INSTALL_LOCATION}. –û–∂–∏–¥–∞–µ—Ç—Å—è: /"
fi

# –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º Payload –∏–∑ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ PKG
mkdir -p /tmp/nexy_final_extracted
if [ -f "$NESTED_PKG_DIR/Payload" ]; then
    tar -xf "$NESTED_PKG_DIR/Payload" -C /tmp/nexy_final_extracted
else
    error "Payload –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º PKG"
fi

APPLE_DOUBLE_COUNT=$(find /tmp/nexy_final_extracted -name '._*' -type f | wc -l)
echo "AppleDouble —Ñ–∞–π–ª–æ–≤: $APPLE_DOUBLE_COUNT"

# –û–∂–∏–¥–∞–µ–º, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –ø—É—Ç–∏ Applications/Nexy.app –≤ Payload
if [ ! -d "/tmp/nexy_final_extracted/Applications/$APP_NAME.app" ]; then
    error "–í Payload –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Applications/$APP_NAME.app"
fi

if codesign --verify --deep --strict --verbose=2 /tmp/nexy_final_extracted/Applications/$APP_NAME.app; then
    log "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ PKG –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–¥–ø–∏—Å–∞–Ω–æ"
else
    error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ PKG –Ω–µ –ø—Ä–æ—à–ª–æ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∏"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
log "–û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
rm -rf /tmp/nexy_pkg_clean_final /tmp/nexy_final_check /tmp/nexy_final_extracted

echo ""
echo -e "${BLUE}üßπ –ß–∏—Å—Ç–∏–º –ª–∏—à–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ PKG –∏ DMG...${NC}"
# –£–¥–∞–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –∏ –ª–∏—à–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏–∑ dist
rm -f "$DIST_DIR/$APP_NAME-app-for-notarization.zip" 2>/dev/null || true
rm -f "$DIST_DIR/$APP_NAME-raw.pkg" 2>/dev/null || true
rm -f "$DIST_DIR/$APP_NAME-distribution.pkg" 2>/dev/null || true
rm -rf "$DIST_DIR/$APP_NAME-final.app" 2>/dev/null || true
rm -rf "$DIST_DIR/$APP_NAME.app" 2>/dev/null || true

echo -e "${GREEN}üéâ –£–ü–ê–ö–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!${NC}"
echo -e "${BLUE}üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:${NC}"
echo "  ‚Ä¢ PKG: $DIST_DIR/$APP_NAME.pkg"
echo "  ‚Ä¢ DMG: $DMG_PATH"
echo "  ‚Ä¢ –†–∞–∑–º–µ—Ä PKG: $(du -h "$DIST_DIR/$APP_NAME.pkg" | cut -f1)"
echo "  ‚Ä¢ –†–∞–∑–º–µ—Ä DMG: $(du -h "$DMG_PATH" | cut -f1)"
echo ""
echo -e "${YELLOW}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo "  1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PKG: open $DIST_DIR/$APP_NAME.pkg (–∏–ª–∏: sudo installer -pkg $DIST_DIR/$APP_NAME.pkg -target /)"
echo "  2. –õ–∏–±–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ DMG –¥–ª—è drag-and-drop: $DMG_PATH"
echo "  3. –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–π—Ç–µ PKG/DMG –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"
echo ""
echo -e "${GREEN}‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!${NC}"
