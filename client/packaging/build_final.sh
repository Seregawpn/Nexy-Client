#!/bin/bash

# üì¶ Nexy AI Assistant - –§–∏–Ω–∞–ª—å–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ –∏ –ø–æ–¥–ø–∏—Å—å (–û–ë–ù–û–í–õ–ï–ù–û 24.09.2025)
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./packaging/build_final.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫—É

# –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê –û–¢ EXTENDED ATTRIBUTES
export COPYFILE_DISABLE=1  # –û—Ç–∫–ª—é—á–∞–µ—Ç AppleDouble (._*) –∏ resource fork –ø—Ä–∏ copy/tar/rsync

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
IDENTITY="Developer ID Application: Sergiy Zasorin (5NKLL2CLB9)"
INSTALLER_IDENTITY="Developer ID Installer: Sergiy Zasorin (5NKLL2CLB9)"
ENTITLEMENTS="packaging/entitlements.plist"
APP_NAME="Nexy"
BUNDLE_ID="com.nexy.assistant"
VERSION="1.0.0"

# –ü—É—Ç–∏
CLIENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
DIST_DIR="$CLIENT_DIR/dist"
CLEAN_APP="/tmp/${APP_NAME}CleanFinal.app"

echo -e "${BLUE}üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —É–ø–∞–∫–æ–≤–∫—É Nexy AI Assistant${NC}"
echo "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $CLIENT_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è (–±–µ–∑ extended attributes)
safe_copy() {
    # $1 = src, $2 = dst
    /usr/bin/ditto --noextattr --noqtn "$1" "$2"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—á–∏—Å—Ç–∫–∏ extended attributes
clean_xattrs() {
    local app_path="$1"
    local stage="$2"
    
    # –ñ—ë—Å—Ç–∫–æ —á–∏—Å—Ç–∏–º
    xattr -cr "$app_path" || true
    find "$app_path" -name '._*' -type f -delete || true
    find "$app_path" -name '.DS_Store' -type f -delete || true
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤–∞–ª–∏–º —Å–±–æ—Ä–∫—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
    if xattr -pr com.apple.FinderInfo "$app_path" 2>/dev/null | grep -q .; then
        error "FinderInfo –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞ —ç—Ç–∞–ø–µ $stage"
    fi
    if xattr -pr com.apple.ResourceFork "$app_path" 2>/dev/null | grep -q .; then
        error "ResourceFork –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞ —ç—Ç–∞–ø–µ $stage"
    fi
    if find "$app_path" -name '._*' | grep -q .; then
        error "AppleDouble (._*) —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —ç—Ç–∞–ø–µ $stage"
    fi
}

warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
check_command() {
    if ! command -v "$1" &> /dev/null; then
        error "–ö–æ–º–∞–Ω–¥–∞ '$1' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã."
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã...${NC}"
check_command "python3"
check_command "codesign"
check_command "pkgbuild"
check_command "productbuild"
check_command "productsign"
check_command "ditto"
check_command "xattr"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º PyInstaller
if ! python3 -m PyInstaller --version &> /dev/null; then
    error "PyInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pyinstaller"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã...${NC}"
if ! security find-identity -v -p codesigning | grep -q "Developer ID Application"; then
    error "Developer ID Application —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if ! security find-identity -v -p basic | grep -q "Developer ID Installer"; then
    error "Developer ID Installer —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ –∏ —Å–±–æ—Ä–∫–∞
echo -e "${BLUE}üßπ –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ –∏ —Å–±–æ—Ä–∫–∞${NC}"
cd "$CLIENT_DIR"

log "–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã..."
rm -rf dist/ build/ *.pyc __pycache__/
find . -name "*.pyc" -delete
find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

log "–°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å PyInstaller..."
python3 -m PyInstaller packaging/Nexy.spec --noconfirm --clean

if [ ! -d "dist/$APP_NAME.app" ]; then
    error "–°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ PyInstaller."
fi

log "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"

# –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –ß–ò–°–¢–û–ô –∫–æ–ø–∏–∏ (–ö–†–ò–¢–ò–ß–ù–û!)
echo -e "${BLUE}üìã –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–π –∫–æ–ø–∏–∏${NC}"

log "–°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–∏—Å—Ç—É—é –∫–æ–ø–∏—é –±–µ–∑ extended attributes..."
rm -rf "$CLEAN_APP"
safe_copy "dist/$APP_NAME.app" "$CLEAN_APP"

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—á–∏—â–∞–µ–º extended attributes..."
clean_xattrs "$CLEAN_APP" "—Å–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–π –∫–æ–ø–∏–∏"
log "Extended attributes —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã"

# –®–∞–≥ 3: –ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–û–†–Ø–î–û–ö!)
echo -e "${BLUE}üîê –®–∞–≥ 3: –ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è${NC}"

log "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∏..."
codesign --remove-signature "$CLEAN_APP" 2>/dev/null || true
# –£–¥–∞–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∏ —Å–æ –≤—Å–µ—Ö –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ Contents (–≤–∫–ª—é—á–∞—è Resources)
find "$CLEAN_APP/Contents" -type f -perm -111 -exec codesign --remove-signature {} \; 2>/dev/null || true

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ Mach-O —Ñ–∞–π–ª—ã (–°–ù–ê–ß–ê–õ–ê!)..."
while IFS= read -r -d '' BIN; do
    if file -b "$BIN" | grep -q "Mach-O"; then
        echo "  –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º: $BIN"
        codesign --force --timestamp --options=runtime \
            --entitlements "$ENTITLEMENTS" \
            --sign "$IDENTITY" "$BIN"
    fi
done < <(find "$CLEAN_APP/Contents" -type f -perm -111 -print0 2>/dev/null)

# –Ø–≤–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π ffmpeg, –µ—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç (Resources)
FFMPEG_BIN="$CLEAN_APP/Contents/Resources/resources/ffmpeg/ffmpeg"
if [ -f "$FFMPEG_BIN" ]; then
    echo "  –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π ffmpeg: $FFMPEG_BIN"
    codesign --force --timestamp --options=runtime \
        --entitlements "$ENTITLEMENTS" \
        --sign "$IDENTITY" "$FFMPEG_BIN"
fi

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –≤–µ—Å—å –±–∞–Ω–¥–ª (–ü–û–¢–û–ú!)..."
codesign --force --timestamp --options=runtime \
    --entitlements "$ENTITLEMENTS" \
    --sign "$IDENTITY" "$CLEAN_APP"

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${BLUE}üîç –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è${NC}"

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
if codesign --verify --deep --strict --verbose=2 "$CLEAN_APP"; then
    log "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º spctl..."
if spctl --assess --type execute --verbose "$CLEAN_APP" 2>/dev/null; then
    log "spctl –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
else
    warn "spctl –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–ø—Ä–æ–Ω–æ—Ç–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)"
fi

# –®–∞–≥ 5: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${BLUE}üì§ –®–∞–≥ 5: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è${NC}"

log "–°–æ–∑–¥–∞–µ–º ZIP –¥–ª—è –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏..."
ditto -c -k --noextattr --noqtn "$CLEAN_APP" "$DIST_DIR/$APP_NAME-app-for-notarization.zip"

log "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—é..."
xcrun notarytool submit "$DIST_DIR/$APP_NAME-app-for-notarization.zip" \
    --keychain-profile "nexy-notary" \
    --apple-id "seregawpn@gmail.com" \
    --wait

log "–ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—É—é –ø–µ—á–∞—Ç—å..."
xcrun stapler staple "$CLEAN_APP"

# –®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ PKG (–ü–†–ê–í–ò–õ–¨–ù–´–ô –°–ü–û–°–û–ë!)
echo -e "${BLUE}üì¶ –®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ PKG${NC}"

log "–°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è PKG..."
rm -rf /tmp/nexy_pkg_clean_final
mkdir -p /tmp/nexy_pkg_clean_final

log "–ö–æ–ø–∏—Ä—É–µ–º –Ω–æ—Ç–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
safe_copy "$CLEAN_APP" /tmp/nexy_pkg_clean_final/$APP_NAME.app
clean_xattrs "/tmp/nexy_pkg_clean_final/$APP_NAME.app" "—Å–æ–∑–¥–∞–Ω–∏–µ PKG"

log "–°–æ–∑–¥–∞–µ–º component PKG..."
pkgbuild --root /tmp/nexy_pkg_clean_final \
    --identifier "$BUNDLE_ID" \
    --version "$VERSION" \
    --install-location /Applications \
    "$DIST_DIR/$APP_NAME-raw.pkg"

log "–°–æ–∑–¥–∞–µ–º distribution PKG..."
productbuild --package-path "$DIST_DIR" \
    --distribution packaging/distribution.xml \
    "$DIST_DIR/$APP_NAME-distribution.pkg"

log "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º PKG –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º..."
productsign --sign "$INSTALLER_IDENTITY" \
    "$DIST_DIR/$APP_NAME-distribution.pkg" \
    "$DIST_DIR/$APP_NAME-signed.pkg"

# –®–∞–≥ 7: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è PKG
echo -e "${BLUE}üì§ –®–∞–≥ 7: –ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è PKG${NC}"

log "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º PKG –Ω–∞ –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—é..."
xcrun notarytool submit "$DIST_DIR/$APP_NAME-signed.pkg" \
    --keychain-profile "nexy-notary" \
    --apple-id "seregawpn@gmail.com" \
    --wait

log "–ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—É—é –ø–µ—á–∞—Ç—å –∫ PKG..."
xcrun stapler staple "$DIST_DIR/$APP_NAME-signed.pkg"

# –®–∞–≥ 8: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo -e "${BLUE}‚úÖ –®–∞–≥ 8: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞${NC}"

log "–ö–æ–ø–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ dist..."
safe_copy "$CLEAN_APP" "$DIST_DIR/$APP_NAME-final.app"
clean_xattrs "$DIST_DIR/$APP_NAME-final.app" "—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–ø–∏—è"

echo "=== –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ê–†–¢–ï–§–ê–ö–¢–û–í ==="
echo ""

echo "1. –ü–†–ò–õ–û–ñ–ï–ù–ò–ï:"
if codesign --verify --deep --strict --verbose=2 "$DIST_DIR/$APP_NAME-final.app"; then
    log "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

if xcrun stapler validate "$DIST_DIR/$APP_NAME-final.app"; then
    log "–ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

echo ""
echo "2. PKG:"
if pkgutil --check-signature "$DIST_DIR/$APP_NAME-signed.pkg"; then
    log "–ü–æ–¥–ø–∏—Å—å PKG –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ü–æ–¥–ø–∏—Å—å PKG –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

if xcrun stapler validate "$DIST_DIR/$APP_NAME-signed.pkg"; then
    log "–ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è PKG –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    error "–ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è PKG –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

echo ""
echo "3. –ü–†–û–í–ï–†–ö–ê –°–û–î–ï–†–ñ–ò–ú–û–ì–û PKG:"
pkgutil --expand "$DIST_DIR/$APP_NAME-signed.pkg" /tmp/nexy_final_check
tar -xf /tmp/nexy_final_check/Payload -C /tmp/nexy_final_extracted
APPLE_DOUBLE_COUNT=$(find /tmp/nexy_final_extracted -name '._*' -type f | wc -l)
echo "AppleDouble —Ñ–∞–π–ª–æ–≤: $APPLE_DOUBLE_COUNT"

if codesign --verify --deep --strict --verbose=2 /tmp/nexy_final_extracted/$APP_NAME.app; then
    log "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ PKG –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–¥–ø–∏—Å–∞–Ω–æ"
else
    error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ PKG –Ω–µ –ø—Ä–æ—à–ª–æ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∏"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
log "–û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
rm -rf /tmp/nexy_pkg_clean_final /tmp/nexy_final_check /tmp/nexy_final_extracted

echo ""
echo -e "${BLUE}üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é –±–µ–∑ extended attributes...${NC}"
rm -rf "$DIST_DIR/$APP_NAME-final.app"
safe_copy "$CLEAN_APP" "$DIST_DIR/$APP_NAME-final.app"
clean_xattrs "$DIST_DIR/$APP_NAME-final.app" "—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–ø–∏—è"

echo -e "${GREEN}üéâ –£–ü–ê–ö–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!${NC}"
echo -e "${BLUE}üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:${NC}"
echo "  ‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $DIST_DIR/$APP_NAME-final.app"
echo "  ‚Ä¢ PKG: $DIST_DIR/$APP_NAME-signed.pkg"
echo "  ‚Ä¢ –†–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $(du -h "$DIST_DIR/$APP_NAME-final.app" | cut -f1)"
echo "  ‚Ä¢ –†–∞–∑–º–µ—Ä PKG: $(du -h "$DIST_DIR/$APP_NAME-signed.pkg" | cut -f1)"
echo ""
echo -e "${YELLOW}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo "  1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $DIST_DIR/$APP_NAME-final.app"
echo "  2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PKG: $DIST_DIR/$APP_NAME-signed.pkg"
echo "  3. –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–π—Ç–µ PKG –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"
echo ""
echo -e "${GREEN}‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!${NC}"
