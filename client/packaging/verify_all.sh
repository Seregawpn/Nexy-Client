#!/bin/bash
set -euo pipefail

echo "üîç –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ê–†–¢–ï–§–ê–ö–¢–û–í NEXY"
echo "================================"
echo ""

ERRORS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞
check_file() {
    local file="$1"
    local description="$2"
    
    if [ -f "$file" ]; then
        echo "‚úÖ $description: $file"
        ls -lh "$file"
    else
        echo "‚ùå $description –ù–ï –ù–ê–ô–î–ï–ù: $file"
        ERRORS=$((ERRORS + 1))
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
run_check() {
    local description="$1"
    shift
    
    echo "üîç $description..."
    if "$@"; then
        echo "‚úÖ $description - OK"
    else
        echo "‚ùå $description - –û–®–ò–ë–ö–ê"
        ERRORS=$((ERRORS + 1))
    fi
    echo ""
}

echo "üìÅ –ü–†–û–í–ï–†–ö–ê –ù–ê–õ–ò–ß–ò–Ø –§–ê–ô–õ–û–í"
echo "=========================="

check_file "dist/Nexy-signed.pkg" "PKG –∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä"
check_file "dist/Nexy.dmg" "DMG –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
check_file "dist/manifest.json" "–ú–∞–Ω–∏—Ñ–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
check_file "dist/Nexy-final.app" "–§–∏–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"

echo ""
echo "üîê –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ï–ô"
echo "==================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if [ -d "dist/Nexy-final.app" ]; then
    run_check "–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è" \
        codesign --verify --strict --deep dist/Nexy-final.app
    
    echo "üìã –î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    codesign --display --verbose=2 dist/Nexy-final.app 2>&1 | head -10
    echo ""
else
    echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏"
    ERRORS=$((ERRORS + 1))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ PKG
if [ -f "dist/Nexy-signed.pkg" ]; then
    run_check "–ü–æ–¥–ø–∏—Å—å PKG" \
        bash -c "pkgutil --check-signature dist/Nexy-signed.pkg | head -1 | grep -q 'signed by a developer certificate'"
    
    echo "üìã –î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∏ PKG:"
    pkgutil --check-signature dist/Nexy-signed.pkg | head -5
    echo ""
else
    echo "‚ùå PKG –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏"
    ERRORS=$((ERRORS + 1))
fi

echo "üîí –ü–†–û–í–ï–†–ö–ê –ù–û–¢–ê–†–ò–ó–ê–¶–ò–ò"
echo "======================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏ DMG
if [ -f "dist/Nexy.dmg" ]; then
    run_check "–ù–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏—è DMG" \
        xcrun stapler validate dist/Nexy.dmg
else
    echo "‚ùå DMG –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏"
    ERRORS=$((ERRORS + 1))
fi

echo "üìã –ü–†–û–í–ï–†–ö–ê –ú–ê–ù–ò–§–ï–°–¢–ê"
echo "===================="

if [ -f "dist/manifest.json" ]; then
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º JSON –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
    if python3 -c "import json; json.load(open('dist/manifest.json'))" 2>/dev/null; then
        echo "‚úÖ JSON –≤–∞–ª–∏–¥–Ω—ã–π"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞:"
        python3 -c "
import json
with open('dist/manifest.json') as f:
    m = json.load(f)
print(f'  –í–µ—Ä—Å–∏—è: {m[\"version\"]}')
print(f'  –ë–∏–ª–¥: {m[\"build\"]}')
print(f'  –†–∞–∑–º–µ—Ä: {m[\"artifact\"][\"size\"]:,} –±–∞–π—Ç')
print(f'  SHA256: {m[\"artifact\"][\"sha256\"][:16]}...')
print(f'  Ed25519: {\"–î–∞\" if m[\"artifact\"][\"ed25519\"] else \"–ù–µ—Ç\"}')
print(f'  URL: {m[\"artifact\"][\"url\"]}')
"
        echo ""
    else
        echo "‚ùå –ú–∞–Ω–∏—Ñ–µ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON"
        ERRORS=$((ERRORS + 1))
    fi
else
    echo "‚ùå –ú–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ERRORS=$((ERRORS + 1))
fi

echo "üß™ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´"
echo "======================"

# –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if [ -d "dist/Nexy-final.app" ]; then
    echo "üöÄ –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (5 —Å–µ–∫—É–Ω–¥)..."
    
    dist/Nexy-final.app/Contents/MacOS/Nexy &
    APP_PID=$!
    
    sleep 5
    
    if ps -p $APP_PID > /dev/null 2>&1; then
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        kill $APP_PID 2>/dev/null || true
        sleep 1
    else
        echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å –∏–ª–∏ —É–ø–∞–ª–æ"
        ERRORS=$((ERRORS + 1))
    fi
    echo ""
fi

# –¢–µ—Å—Ç PIL –∏–∫–æ–Ω–æ–∫
echo "üé® –¢–µ—Å—Ç PIL –¥–ª—è –∏–∫–æ–Ω–æ–∫..."
python3 -c "
import sys
import os
import tempfile

# –¢–µ—Å—Ç–∏—Ä—É–µ–º PIL
try:
    from PIL import Image, ImageDraw
    print('‚úÖ PIL –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ')
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∏–∫–æ–Ω–∫—É
    img = Image.new('RGBA', (32, 32), (0, 0, 0, 0))
    draw = ImageDraw.Draw(img)
    draw.ellipse([8, 8, 24, 24], fill='#007AFF')
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with tempfile.NamedTemporaryFile(suffix='.png', delete=False) as f:
        img.save(f.name, format='PNG')
        size = os.path.getsize(f.name)
        os.unlink(f.name)
    
    if size > 0:
        print(f'‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∏–∫–æ–Ω–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ ({size} –±–∞–π—Ç)')
        print('üéØ PIL —Ä–∞–±–æ—Ç–∞–µ—Ç - –∏–∫–æ–Ω–∫–∏ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è!')
    else:
        print('‚ùå –¢–µ—Å—Ç–æ–≤–∞—è –∏–∫–æ–Ω–∫–∞ –ø—É—Å—Ç–∞—è')
        
except ImportError as e:
    print(f'‚ùå PIL –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω: {e}')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ PIL: {e}')
" || ERRORS=$((ERRORS + 1))

echo ""

echo "üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê"
echo "======================"

echo "üìÅ –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:"
if [ -f "dist/Nexy-signed.pkg" ]; then
    PKG_SIZE=$(stat -f%z dist/Nexy-signed.pkg)
    echo "  PKG: $(ls -lh dist/Nexy-signed.pkg | awk '{print $5}')"
fi

if [ -f "dist/Nexy.dmg" ]; then
    DMG_SIZE=$(stat -f%z dist/Nexy.dmg)
    echo "  DMG: $(ls -lh dist/Nexy.dmg | awk '{print $5}')"
fi

if [ -d "dist/Nexy-final.app" ]; then
    APP_SIZE=$(du -sh dist/Nexy-final.app | awk '{print $1}')
    echo "  APP: $APP_SIZE"
fi

echo ""
echo "üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:"
echo "  ‚úÖ –ü–æ–¥–ø–∏—Å—å: Developer ID Application (5NKLL2CLB9)"
echo "  ‚úÖ PKG: Developer ID Installer (5NKLL2CLB9)"
echo "  ‚úÖ DMG: –ù–æ—Ç–∞—Ä–∏–∑–æ–≤–∞–Ω Apple"
echo "  ‚úÖ –ú–∞–Ω–∏—Ñ–µ—Å—Ç: SHA256 + Ed25519"

echo ""
if [ $ERRORS -eq 0 ]; then
    echo "üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!"
    echo "================================="
    echo ""
    echo "‚úÖ –ì–æ—Ç–æ–≤—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:"
    echo "   üì¶ PKG: dist/Nexy-signed.pkg"
    echo "   üíø DMG: dist/Nexy.dmg"
    echo "   üìã –ú–∞–Ω–∏—Ñ–µ—Å—Ç: dist/manifest.json"
    echo ""
    echo "üöÄ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –¢–µ—Å—Ç–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo "   sudo installer -pkg dist/Nexy-signed.pkg -target /"
    echo ""
    echo "üéØ –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–≤–µ—Ç–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –≤ –º–µ–Ω—é-–±–∞—Ä–µ!"
    
    exit 0
else
    echo "‚ùå –ù–ê–ô–î–ï–ù–û –û–®–ò–ë–û–ö: $ERRORS"
    echo "======================="
    echo ""
    echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏"
    echo "2. –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã: ./packaging/build_all.sh"
    echo "3. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É: ./packaging/verify_all.sh"
    
    exit 1
fi

