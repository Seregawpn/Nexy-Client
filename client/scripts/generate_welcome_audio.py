#!/usr/bin/env python3
"""
Generate Welcome Audio Script

–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥–∑–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç Azure TTS (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω) –∏–ª–∏ macOS say command.
"""

import asyncio
import logging
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent.parent))

from modules.welcome_message.core.audio_generator import WelcomeAudioGenerator
from modules.welcome_message.core.types import WelcomeConfig

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


async def generate_welcome_audio():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞—É–¥–∏–æ —Ñ–∞–π–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
    try:
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        config = WelcomeConfig(
            enabled=True,
            text="Hi! Nexy is here. How can I help you?",
            audio_file="assets/audio/welcome_en.mp3",
            fallback_to_tts=True,
            delay_sec=1.0,
            volume=0.8,
            voice="en-US-JennyNeural",
            sample_rate=48000,
            channels=1,
            bit_depth=16
        )
        
        logger.info("üéµ [GENERATE_AUDIO] –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∞—É–¥–∏–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è")
        logger.info(f"üìù [GENERATE_AUDIO] –¢–µ–∫—Å—Ç: '{config.text}'")
        logger.info(f"üéØ [GENERATE_AUDIO] –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {config.audio_file}")
        
        # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        generator = WelcomeAudioGenerator(config)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—É–¥–∏–æ
        audio_data = await generator.generate_audio(config.text)
        
        if audio_data is None:
            logger.error("‚ùå [GENERATE_AUDIO] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞—É–¥–∏–æ")
            return False
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        output_path = Path(__file__).parent.parent / config.audio_file
        success = await generator.save_audio_to_file(audio_data, output_path)
        
        if success:
            duration_sec = len(audio_data) / config.sample_rate
            file_size = output_path.stat().st_size
            logger.info(f"‚úÖ [GENERATE_AUDIO] –ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!")
            logger.info(f"üìä [GENERATE_AUDIO] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            logger.info(f"   - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_sec:.1f} —Å–µ–∫—É–Ω–¥")
            logger.info(f"   - –°—ç–º–ø–ª–æ–≤: {len(audio_data)}")
            logger.info(f"   - Sample Rate: {config.sample_rate} Hz")
            logger.info(f"   - –ö–∞–Ω–∞–ª—ã: {config.channels}")
            logger.info(f"   - –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
            logger.info(f"   - –ü—É—Ç—å: {output_path}")
            return True
        else:
            logger.error("‚ùå [GENERATE_AUDIO] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞—É–¥–∏–æ —Ñ–∞–π–ª")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå [GENERATE_AUDIO] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéµ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∞—É–¥–∏–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è Nexy AI Assistant")
    print("=" * 60)
    
    success = await generate_welcome_audio()
    
    if success:
        print("\n‚úÖ –ê—É–¥–∏–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!")
        print("üéØ –§–∞–π–ª –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
        sys.exit(1)


if __name__ == "__main__":
    asyncio.run(main())
