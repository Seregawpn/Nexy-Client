#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤
"""

import asyncio
import time
import logging
from audio_player import AudioPlayer

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def test_simplified_interruption():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
    
    # –°–æ–∑–¥–∞–µ–º AudioPlayer
    audio_player = AudioPlayer()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∞—É–¥–∏–æ –¥–∞–Ω–Ω—ã–µ
    import numpy as np
    sample_rate = 48000
    duration = 2.0  # 2 —Å–µ–∫—É–Ω–¥—ã
    samples = int(sample_rate * duration)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∏–Ω—É—Å–æ–∏–¥—É
    t = np.linspace(0, duration, samples)
    audio_data = (np.sin(2 * np.pi * 440 * t) * 32767).astype(np.int16)
    
    print(f"üìä –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∞—É–¥–∏–æ: {len(audio_data)} —Å—ç–º–ø–ª–æ–≤, {duration:.1f} —Å–µ–∫—É–Ω–¥")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
    print("üîä –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ...")
    audio_player.start_playback()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ —á–∞–Ω–∫–∏
    chunk_size = 1024
    for i in range(0, len(audio_data), chunk_size):
        chunk = audio_data[i:i+chunk_size]
        audio_player.add_chunk(chunk)
        print(f"üì¶ –î–æ–±–∞–≤–ª–µ–Ω —á–∞–Ω–∫ {i//chunk_size + 1}: {len(chunk)} —Å—ç–º–ø–ª–æ–≤")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —á–∞–Ω–∫–∞–º–∏
        await asyncio.sleep(0.01)
    
    print(f"üìä –í—Å–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —á–∞–Ω–∫–æ–≤: {len(audio_data)//chunk_size + 1}")
    print(f"üìä –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {audio_player.audio_queue.qsize()}")
    print(f"üìä –†–∞–∑–º–µ—Ä –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –±—É—Ñ–µ—Ä–∞: {len(audio_player.internal_buffer)}")
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    print("‚è≥ –ñ–¥–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è...")
    await asyncio.sleep(0.5)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ
    print("üö® –¢–ï–°–¢–ò–†–£–ï–ú –ü–†–ï–†–´–í–ê–ù–ò–ï...")
    start_time = time.time()
    
    audio_player.clear_all_audio_data()
    
    interrupt_time = (time.time() - start_time) * 1000
    print(f"‚è±Ô∏è –í—Ä–µ–º—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è: {interrupt_time:.1f}ms")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    queue_size = audio_player.audio_queue.qsize()
    buffer_size = len(audio_player.internal_buffer)
    
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è:")
    print(f"   - –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {queue_size}")
    print(f"   - –†–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞: {buffer_size}")
    print(f"   - –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: {audio_player.is_playing}")
    
    if queue_size == 0 and buffer_size == 0:
        print("‚úÖ –ü–†–ï–†–´–í–ê–ù–ò–ï –£–°–ü–ï–®–ù–û - –≤—Å–µ –±—É—Ñ–µ—Ä—ã –æ—á–∏—â–µ–Ω—ã!")
    else:
        print("‚ùå –ü–†–ï–†–´–í–ê–ù–ò–ï –ù–ï–ü–û–õ–ù–û–ï - –±—É—Ñ–µ—Ä—ã –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω—ã!")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
    print("\nüîí –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –±—É—Ñ–µ—Ä–∞...")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —á–∞–Ω–∫ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    test_chunk = np.array([1000, 2000, 3000], dtype=np.int16)
    print(f"üì¶ –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞–Ω–∫: {len(test_chunk)} —Å—ç–º–ø–ª–æ–≤")
    
    if audio_player.is_buffer_locked():
        print("üö® –ë—É—Ñ–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω - —á–∞–Ω–∫ –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω")
    else:
        print("‚úÖ –ë—É—Ñ–µ—Ä –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω - —á–∞–Ω–∫ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω")
    
    audio_player.add_chunk(test_chunk)
    
    print(f"üìä –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏ –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {audio_player.audio_queue.qsize()}")
    
    # –ñ–¥–µ–º –∏—Å—Ç–µ—á–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    print("‚è≥ –ñ–¥–µ–º –∏—Å—Ç–µ—á–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±—É—Ñ–µ—Ä–∞...")
    await asyncio.sleep(0.6)  # –ë–æ–ª—å—à–µ —á–µ–º buffer_block_duration (0.5s)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —á–∞–Ω–∫ —Å–Ω–æ–≤–∞
    print("üì¶ –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —á–∞–Ω–∫ –ø–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏...")
    audio_player.add_chunk(test_chunk)
    
    print(f"üìä –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏ –ø–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {audio_player.audio_queue.qsize()}")
    
    if audio_player.audio_queue.qsize() > 0:
        print("‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ - —á–∞–Ω–∫–∏ —Å–Ω–æ–≤–∞ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!")
    else:
        print("‚ùå –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ –∏—Å—Ç–µ–∫–ª–∞ - —á–∞–Ω–∫–∏ –≤—Å–µ –µ—â–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!")
    
    # –û—á–∏—â–∞–µ–º
    audio_player.stop_playback()
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    asyncio.run(test_simplified_interruption())
