#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è TCC –ø—Ä–æ–±–ª–µ–º —Å Bundle ID
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ Bundle ID
"""

import sys
import os
import subprocess

def test_tcc_reset():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ TCC —Å–±—Ä–æ—à–µ–Ω –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ Bundle ID"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ TCC —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è com.nexy.assistant...")
    
    bundle_id = "com.nexy.assistant"
    permissions = ["Microphone", "ScreenCapture", "Accessibility", "ListenEvent"]
    
    for permission in permissions:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
            result = subprocess.run(
                ["tccutil", "reset", permission, bundle_id],
                capture_output=True,
                text=True,
                timeout=10
            )
            
            if result.returncode == 0:
                print(f"‚úÖ {permission}: TCC —Å–±—Ä–æ—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f"‚ö†Ô∏è {permission}: {result.stderr.strip()}")
                
        except Exception as e:
            print(f"‚ùå {permission}: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ - {e}")
    
    return True

def test_bundle_id_consistency():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å Bundle ID –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ Bundle ID...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º spec —Ñ–∞–π–ª
    spec_path = "packaging/Nexy.spec"
    if os.path.exists(spec_path):
        with open(spec_path, 'r') as f:
            content = f.read()
            if 'com.nexy.assistant' in content:
                print("‚úÖ Spec —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID")
            else:
                print("‚ùå Spec —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID")
                return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_path = "config/unified_config.yaml"
    if os.path.exists(config_path):
        with open(config_path, 'r') as f:
            content = f.read()
            if 'com.nexy.assistant' in content:
                print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID")
            else:
                print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID")
                return False
    
    return True

def test_old_bundle_ids_cleaned():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ä—ã–µ Bundle ID –æ—á–∏—â–µ–Ω—ã"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö Bundle ID...")
    
    old_bundle_ids = [
        "com.nexy.voiceassistant",
        "com.sergiyzasorin.nexy.voiceassistant"
    ]
    
    for old_id in old_bundle_ids:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ TCC –Ω–µ –∑–Ω–∞–µ—Ç –æ —Å—Ç–∞—Ä–æ–º Bundle ID
            result = subprocess.run(
                ["tccutil", "reset", "Microphone", old_id],
                capture_output=True,
                text=True,
                timeout=10
            )
            
            if "No matching entries found" in result.stderr:
                print(f"‚úÖ –°—Ç–∞—Ä—ã–π Bundle ID {old_id} –æ—á–∏—â–µ–Ω –∏–∑ TCC")
            else:
                print(f"‚ö†Ô∏è –°—Ç–∞—Ä—ã–π Bundle ID {old_id} –≤—Å–µ –µ—â–µ –≤ TCC")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ {old_id}: {e}")
    
    return True

def test_permissions_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ PermissionsIntegration –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PermissionsIntegration...")
    
    integration_path = "integration/integrations/permissions_integration.py"
    if os.path.exists(integration_path):
        with open(integration_path, 'r') as f:
            content = f.read()
            if 'UnifiedConfigLoader' in content:
                print("‚úÖ PermissionsIntegration –∏—Å–ø–æ–ª—å–∑—É–µ—Ç UnifiedConfigLoader")
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID
                config_path = "config/unified_config.yaml"
                if os.path.exists(config_path):
                    with open(config_path, 'r') as f:
                        config_content = f.read()
                        if 'com.nexy.assistant' in config_content:
                            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID")
                            return True
                        else:
                            print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Bundle ID")
                            return False
                else:
                    print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False
            else:
                print("‚ùå PermissionsIntegration –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç UnifiedConfigLoader")
                return False
    else:
        print("‚ùå PermissionsIntegration –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

if __name__ == "__main__":
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ TCC –ø—Ä–æ–±–ª–µ–º —Å Bundle ID...")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: TCC —Å–±—Ä–æ—Å
    tcc_ok = test_tcc_reset()
    
    # –¢–µ—Å—Ç 2: –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å Bundle ID
    consistency_ok = test_bundle_id_consistency()
    
    # –¢–µ—Å—Ç 3: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö Bundle ID
    cleanup_ok = test_old_bundle_ids_cleaned()
    
    # –¢–µ—Å—Ç 4: PermissionsIntegration
    permissions_ok = test_permissions_integration()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"TCC —Å–±—Ä–æ—Å: {'‚úÖ –í–´–ü–û–õ–ù–ï–ù' if tcc_ok else '‚ùå –ù–ï –í–´–ü–û–õ–ù–ï–ù'}")
    print(f"–ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å Bundle ID: {'‚úÖ –û–ö' if consistency_ok else '‚ùå –ù–ï –û–ö'}")
    print(f"–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö Bundle ID: {'‚úÖ –í–´–ü–û–õ–ù–ï–ù–ê' if cleanup_ok else '‚ùå –ù–ï –í–´–ü–û–õ–ù–ï–ù–ê'}")
    print(f"PermissionsIntegration: {'‚úÖ –û–ö' if permissions_ok else '‚ùå –ù–ï –û–ö'}")
    
    if tcc_ok and consistency_ok and cleanup_ok and permissions_ok:
        print("\nüéâ TCC –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê! –ú–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
    else:
        print("\n‚ö†Ô∏è TCC –ü–†–û–ë–õ–ï–ú–ê –ù–ï –†–ï–®–ï–ù–ê. –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")
