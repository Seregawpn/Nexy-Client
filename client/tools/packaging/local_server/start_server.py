#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Sparkle AppCast
–ó–∞–ø—É—Å–∫–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–∞ localhost:8080
"""

import http.server
import socketserver
import os
import sys
from pathlib import Path

# –ü–æ—Ä—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
PORT = 8080

class AppCastHandler(http.server.SimpleHTTPRequestHandler):
    def end_headers(self):
        # –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        super().end_headers()
    
    def do_GET(self):
        # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã
        print(f"üì• GET –∑–∞–ø—Ä–æ—Å: {self.path}")
        
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è appcast.xml
        if self.path == '/updates/appcast.xml':
            appcast_path = Path(__file__).parent / 'updates' / 'appcast.xml'
            if appcast_path.exists():
                self.send_response(200)
                self.send_header('Content-type', 'application/rss+xml')
                self.end_headers()
                with open(appcast_path, 'rb') as f:
                    self.wfile.write(f.read())
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω appcast.xml")
                return
        
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è PKG —Ñ–∞–π–ª
        if self.path.startswith('/updates/') and self.path.endswith('.pkg'):
            pkg_name = os.path.basename(self.path)
            pkg_path = Path(__file__).parent.parent.parent / pkg_name
            if pkg_path.exists():
                self.send_response(200)
                self.send_header('Content-type', 'application/octet-stream')
                self.send_header('Content-Disposition', f'attachment; filename="{pkg_name}"')
                self.end_headers()
                with open(pkg_path, 'rb') as f:
                    self.wfile.write(f.read())
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω PKG —Ñ–∞–π–ª: {pkg_name}")
                return
            else:
                print(f"‚ùå PKG —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {pkg_path}")
                self.send_response(404)
                self.end_headers()
                return
        
        # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        super().do_GET()

def main():
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–µ—Ä–≤–µ—Ä–∞
    os.chdir(Path(__file__).parent)
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Sparkle AppCast")
    print(f"üìç URL: http://localhost:{PORT}")
    print(f"üìã AppCast: http://localhost:{PORT}/updates/appcast.xml")
    print(f"üì¶ PKG —Ñ–∞–π–ª—ã: http://localhost:{PORT}/updates/")
    print(f"‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("-" * 50)
    
    try:
        with socketserver.TCPServer(("", PORT), AppCastHandler) as httpd:
            print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
            httpd.serve_forever()
    except KeyboardInterrupt:
        print(f"\n‚èπÔ∏è  –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except OSError as e:
        if e.errno == 48:  # Address already in use
            print(f"‚ùå –ü–æ—Ä—Ç {PORT} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç.")
            sys.exit(1)
        else:
            raise

if __name__ == "__main__":
    main()
