#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Thread Safety - –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–æ—Ç–æ–∫–æ–≤ –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏
"""

import asyncio
import time
import numpy as np
import threading
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from audio_player import AudioPlayer

async def test_thread_safety():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–æ—Ç–æ–∫–æ–≤"""
    
    print("üßµ –¢–ï–°–¢ THREAD SAFETY")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–µ–º AudioPlayer
    audio_player = AudioPlayer()
    
    # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ
    sample_rate = 44100
    duration = 3  # 3 —Å–µ–∫—É–Ω–¥—ã
    test_audio = np.sin(2 * np.pi * 440 * np.linspace(0, duration, sample_rate * duration))
    test_audio = (test_audio * 0.3).astype(np.float32)
    
    print(f"   üì¶ –°–æ–∑–¥–∞–Ω–æ –∞—É–¥–∏–æ: {len(test_audio)} —Å—ç–º–ø–ª–æ–≤ ({duration}s)")
    
    # 3. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞—É–¥–∏–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    def add_audio_in_thread():
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∞—É–¥–∏–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        try:
            chunk_size = 44100  # 1 —Å–µ–∫—É–Ω–¥–∞
            for i in range(0, len(test_audio), chunk_size):
                chunk = test_audio[i:i+chunk_size]
                audio_player.add_chunk(chunk)
                time.sleep(0.1)  # 100ms –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —á–∞–Ω–∫–∞–º–∏
                print(f"      üì¶ –ß–∞–Ω–∫ {i//chunk_size + 1} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–æ—Ç–æ–∫–µ")
        except Exception as e:
            print(f"      ‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ—Ç–æ–∫–µ: {e}")
    
    # 4. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    def interrupt_in_thread():
        """–ü—Ä–µ—Ä—ã–≤–∞–µ—Ç –∞—É–¥–∏–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        try:
            time.sleep(0.5)  # –ñ–¥–µ–º 500ms
            print("      üö® –ü–†–ï–†–´–í–ê–ù–ò–ï –í –û–¢–î–ï–õ–¨–ù–û–ú –ü–û–¢–û–ö–ï!")
            audio_player.clear_all_audio_data()
            print("      ‚úÖ –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –≤ –ø–æ—Ç–æ–∫–µ")
        except Exception as e:
            print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –≤ –ø–æ—Ç–æ–∫–µ: {e}")
    
    # 5. –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞—É–¥–∏–æ
    print("   üßµ –ó–∞–ø—É—Å–∫–∞—é –ø–æ—Ç–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞—É–¥–∏–æ...")
    audio_thread = threading.Thread(target=add_audio_in_thread)
    audio_thread.start()
    
    # 6. –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    print("   üßµ –ó–∞–ø—É—Å–∫–∞—é –ø–æ—Ç–æ–∫ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è...")
    interrupt_thread = threading.Thread(target=interrupt_in_thread)
    interrupt_thread.start()
    
    # 7. –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤
    print("   ‚è∞ –ñ–¥—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤...")
    audio_thread.join()
    interrupt_thread.join()
    
    # 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("   üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
    await asyncio.sleep(1.0)  # –ñ–¥–µ–º 1 —Å–µ–∫—É–Ω–¥—É
    
    final_queue_size = audio_player.audio_queue.qsize()
    print(f"   üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {final_queue_size}")
    
    if final_queue_size == 0:
        print("   ‚úÖ THREAD SAFETY –†–ê–ë–û–¢–ê–ï–¢!")
    else:
        print("   ‚ùå THREAD SAFETY –ù–ï –†–ê–ë–û–¢–ê–ï–¢!")
    
    # 9. –û—á–∏—Å—Ç–∫–∞
    audio_player.force_stop_immediately()

async def test_concurrent_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ AudioPlayer"""
    
    print("\nüîÑ –¢–ï–°–¢ CONCURRENT ACCESS")
    print("=" * 60)
    
    audio_player = AudioPlayer()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ
    sample_rate = 44100
    duration = 2
    test_audio = np.sin(2 * np.pi * 440 * np.linspace(0, duration, sample_rate * duration))
    test_audio = (test_audio * 0.3).astype(np.float32)
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    def concurrent_operations():
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"""
        try:
            # –î–æ–±–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ
            audio_player.add_chunk(test_audio)
            print("      üì¶ –ê—É–¥–∏–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            
            # –°—Ä–∞–∑—É –ø—Ä–µ—Ä—ã–≤–∞–µ–º
            audio_player.clear_all_audio_data()
            print("      üö® –ê—É–¥–∏–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ")
            
        except Exception as e:
            print(f"      ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    threads = []
    for i in range(5):
        thread = threading.Thread(target=concurrent_operations)
        threads.append(thread)
        thread.start()
        print(f"   üßµ –ü–æ—Ç–æ–∫ {i+1} –∑–∞–ø—É—â–µ–Ω")
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    for thread in threads:
        thread.join()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await asyncio.sleep(0.5)
    final_queue_size = audio_player.audio_queue.qsize()
    print(f"   üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {final_queue_size}")
    
    if final_queue_size == 0:
        print("   ‚úÖ CONCURRENT ACCESS –†–ê–ë–û–¢–ê–ï–¢!")
    else:
        print("   ‚ùå CONCURRENT ACCESS –ù–ï –†–ê–ë–û–¢–ê–ï–¢!")
    
    # –û—á–∏—Å—Ç–∫–∞
    audio_player.force_stop_immediately()

async def test_interrupt_flag_safety():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ñ–ª–∞–≥–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
    
    print("\nüö® –¢–ï–°–¢ INTERRUPT FLAG SAFETY")
    print("=" * 60)
    
    audio_player = AudioPlayer()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ
    sample_rate = 44100
    duration = 2
    test_audio = np.sin(2 * np.pi * 440 * np.linspace(0, duration, sample_rate * duration))
    test_audio = (test_audio * 0.3).astype(np.float32)
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–ª–∞–≥–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    def check_interrupt_flag():
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
        try:
            flag_set = audio_player.interrupt_flag.is_set()
            print(f"      üö® –§–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è: {flag_set}")
            return flag_set
        except Exception as e:
            print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–ª–∞–≥–∞: {e}")
            return False
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–ª–∞–≥–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    def set_interrupt_flag():
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
        try:
            audio_player.interrupt_flag.set()
            print("      ‚úÖ –§–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            print(f"      ‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–ª–∞–≥–∞: {e}")
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ñ–ª–∞–≥–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    def clear_interrupt_flag():
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ñ–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
        try:
            audio_player.interrupt_flag.clear()
            print("      üîÑ –§–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω")
        except Exception as e:
            print(f"      ‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–ª–∞–≥–∞: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
    print("   üßµ –¢–µ—Å—Ç–∏—Ä—É—é —Ñ–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö...")
    
    # –ü–æ—Ç–æ–∫ 1: –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–ª–∞–≥
    thread1 = threading.Thread(target=check_interrupt_flag)
    thread1.start()
    
    # –ü–æ—Ç–æ–∫ 2: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥
    thread2 = threading.Thread(target=set_interrupt_flag)
    thread2.start()
    
    # –ü–æ—Ç–æ–∫ 3: —Å–Ω–æ–≤–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–ª–∞–≥
    thread3 = threading.Thread(target=check_interrupt_flag)
    thread3.start()
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    thread1.join()
    thread2.join()
    thread3.join()
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    final_flag = check_interrupt_flag()
    print(f"   üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–ª–∞–≥–∞: {final_flag}")
    
    if final_flag:
        print("   ‚úÖ INTERRUPT FLAG SAFETY –†–ê–ë–û–¢–ê–ï–¢!")
    else:
        print("   ‚ùå INTERRUPT FLAG SAFETY –ù–ï –†–ê–ë–û–¢–ê–ï–¢!")
    
    # –û—á–∏—Å—Ç–∫–∞
    audio_player.force_stop_immediately()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Thread Safety...")
    
    # –¢–µ—Å—Ç 1: Thread Safety
    asyncio.run(test_thread_safety())
    
    # –¢–µ—Å—Ç 2: Concurrent Access
    asyncio.run(test_concurrent_access())
    
    # –¢–µ—Å—Ç 3: Interrupt Flag Safety
    asyncio.run(test_interrupt_flag_safety())
