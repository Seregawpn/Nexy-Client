#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ –±–µ–∑ —Ç–∞–π–º–µ—Ä–∞.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –º–∏–∫—Ä–æ—Ñ–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è.
"""

import asyncio
import time
from rich.console import Console

console = Console()

class MockStateManager:
    """–ú–æ–∫ StateManager –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.state = "SLEEPING"
        self.interrupt_called = False
        self.microphone_activated = False
        self.screen_captured = False
        
    def get_state(self):
        return self.state
    
    def set_state(self, new_state):
        self.state = new_state
        console.print(f"[dim]‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ: {self.state}[/dim]")
    
    def _capture_screen(self):
        self.screen_captured = True
        console.print("[dim]üì∏ –≠–∫—Ä–∞–Ω –∑–∞—Ö–≤–∞—á–µ–Ω[/dim]")
    
    def start_recording(self):
        self.microphone_activated = True
        console.print("[dim]üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω[/dim]")

class MockInputHandler:
    """–ú–æ–∫ InputHandler –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self, queue):
        self.queue = queue
        self.interrupting = False
        
    def on_press(self):
        """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –ø—Ä–æ–±–µ–ª–∞"""
        console.print("[bold red]üîá –ü–†–û–ë–ï–õ –ù–ê–ñ–ê–¢ - –ú–ì–ù–û–í–ï–ù–ù–û–ï –ü–†–ï–†–´–í–ê–ù–ò–ï –†–ï–ß–ò![/bold red]")
        
        # 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
        self.interrupting = True
        console.print(f"[dim]üîç –§–ª–∞–≥ interrupting —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {self.interrupting}[/dim]")
        
        # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¢–û–õ–¨–ö–û –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ
        self.queue.put_nowait("interrupt_or_cancel")
        console.print(f"[dim]üì§ –°–æ–±—ã—Ç–∏–µ interrupt_or_cancel –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å[/dim]")
        
        # 3. –ú–∏–∫—Ä–æ—Ñ–æ–Ω –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è!
        console.print(f"[dim]üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (2-5ms)[/dim]")
        
        # –£–ë–ò–†–ê–ï–ú –¢–ê–ô–ú–ï–† –ü–û–õ–ù–û–°–¢–¨–Æ - –ù–ò–ö–ê–ö–ò–• –ó–ê–î–ï–†–ñ–ï–ö!

async def test_sequential_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –±–µ–∑ —Ç–∞–π–º–µ—Ä–∞"""
    console.print("[bold blue]üß™ –¢–µ—Å—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ –±–µ–∑ —Ç–∞–π–º–µ—Ä–∞[/bold blue]")
    console.print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫–∏
    event_queue = asyncio.Queue()
    state_manager = MockStateManager()
    input_handler = MockInputHandler(event_queue)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –ø—Ä–æ–±–µ–ª–∞
    console.print("\n[bold green]1Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –ø—Ä–æ–±–µ–ª–∞[/bold green]")
    input_handler.on_press()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø–æ–ø–∞–ª–æ –≤ –æ—á–µ—Ä–µ–¥—å
    console.print(f"\n[bold green]2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—á–µ—Ä–µ–¥—å —Å–æ–±—ã—Ç–∏–π[/bold green]")
    console.print(f"[dim]–†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {event_queue.qsize()}[/dim]")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
    console.print(f"\n[bold green]3Ô∏è‚É£ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ interrupt_or_cancel[/bold green]")
    event = await event_queue.get()
    console.print(f"[dim]–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ: {event}[/dim]")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    console.print(f"\n[bold green]4Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è[/bold green]")
    if event == "interrupt_or_cancel":
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ
        console.print("[blue]üîá –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ...[/blue]")
        await asyncio.sleep(0.001)  # –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (1ms)
        
        # –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω
        console.print("[blue]üé§ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –∞–∫—Ç–∏–≤–∏—Ä—É—é –º–∏–∫—Ä–æ—Ñ–æ–Ω –ø–æ—Å–ª–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è...[/blue]")
        
        # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω
        state_manager._capture_screen()
        
        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω
        state_manager.start_recording()
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ LISTENING
        state_manager.set_state("LISTENING")
        
        console.print("[bold green]‚úÖ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏![/bold green]")
        console.print("[bold green]üé§ –°–ª—É—à–∞—é –∫–æ–º–∞–Ω–¥—É...[/bold green]")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.print(f"\n[bold green]5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç[/bold green]")
    console.print(f"[dim]–°–æ—Å—Ç–æ—è–Ω–∏–µ: {state_manager.state}[/dim]")
    console.print(f"[dim]–≠–∫—Ä–∞–Ω –∑–∞—Ö–≤–∞—á–µ–Ω: {state_manager.screen_captured}[/dim]")
    console.print(f"[dim]–ú–∏–∫—Ä–æ—Ñ–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: {state_manager.microphone_activated}[/dim]")
    
    # –í—ã–≤–æ–¥
    console.print(f"\n[bold green]üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:[/bold green]")
    if (state_manager.state == "LISTENING" and 
        state_manager.screen_captured and 
        state_manager.microphone_activated):
        console.print("[bold green]‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ![/bold green]")
        console.print("[dim]‚Ä¢ –ù–µ—Ç —Ç–∞–π–º–µ—Ä–∞ - –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–¥–µ—Ä–∂–µ–∫[/dim]")
        console.print("[dim]‚Ä¢ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è[/dim]")
        console.print("[dim]‚Ä¢ –ß–µ—Ç–∫–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ ‚Üí –º–∏–∫—Ä–æ—Ñ–æ–Ω[/dim]")
    else:
        console.print("[bold red]‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫![/bold red]")
    
    console.print("\n[bold blue]üéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏:[/bold blue]")
    console.print("‚Ä¢ üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: 2-5ms –≤–º–µ—Å—Ç–æ 150ms")
    console.print("‚Ä¢ üîí –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: –Ω–µ—Ç race conditions —Å —Ç–∞–π–º–µ—Ä–æ–º")
    console.print("‚Ä¢ üß† –ü—Ä–æ—Å—Ç–æ—Ç–∞: –æ–¥–Ω–∞ –ª–æ–≥–∏–∫–∞ –≤–º–µ—Å—Ç–æ –¥–≤—É—Ö")
    console.print("‚Ä¢ ‚ö° –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å: –º–∏–∫—Ä–æ—Ñ–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")

if __name__ == "__main__":
    try:
        asyncio.run(test_sequential_logic())
    except KeyboardInterrupt:
        console.print("\nüëã –í—ã—Ö–æ–¥.")
