#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ gRPC —Å—Ç—Ä–∏–º–∞.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ gRPC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–∏.
"""

import asyncio
import time
from rich.console import Console

console = Console()

class MockGrpcClient:
    """–ú–æ–∫ gRPC –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.channel = "mock_channel"
        self.stub = "mock_stub"
        self.audio_player = MockAudioPlayer()
        self.connection_closed = False
        self.state_reset = False
        
    def close_connection(self):
        """–ú–æ–∫ –º–µ—Ç–æ–¥–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
        console.print("[blue]üîå –ó–∞–∫—Ä—ã–≤–∞—é gRPC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...[/blue]")
        self.connection_closed = True
        self.channel = None
        self.stub = None
        console.print("[green]‚úÖ gRPC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ[/green]")
    
    def reset_state(self):
        """–ú–æ–∫ –º–µ—Ç–æ–¥–∞ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        console.print("[blue]üîÑ –°–±—Ä–∞—Å—ã–≤–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ gRPC –∫–ª–∏–µ–Ω—Ç–∞...[/blue]")
        self.state_reset = True
        console.print("[green]‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ gRPC –∫–ª–∏–µ–Ω—Ç–∞ —Å–±—Ä–æ—à–µ–Ω–æ[/green]")

class MockAudioPlayer:
    """–ú–æ–∫ –∞—É–¥–∏–æ –ø–ª–µ–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.audio_queue = MockQueue()
        self.cleared = False
        self.stopped = False
        
    def clear_all_audio_data(self):
        """–ú–æ–∫ –º–µ—Ç–æ–¥–∞ –æ—á–∏—Å—Ç–∫–∏ –∞—É–¥–∏–æ"""
        console.print("[blue]üßπ –û—á–∏—â–∞—é –∞—É–¥–∏–æ –±—É—Ñ–µ—Ä—ã...[/blue]")
        self.cleared = True
        self.audio_queue.clear()
        console.print("[green]‚úÖ –ê—É–¥–∏–æ –±—É—Ñ–µ—Ä—ã –æ—á–∏—â–µ–Ω—ã[/green]")
    
    def force_stop(self):
        """–ú–æ–∫ –º–µ—Ç–æ–¥–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"""
        console.print("[blue]‚èπÔ∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∞—É–¥–∏–æ...[/blue]")
        self.stopped = True
        console.print("[green]‚úÖ –ê—É–¥–∏–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ[/green]")

class MockQueue:
    """–ú–æ–∫ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.items = [f"item_{i}" for i in range(5)]
    
    def qsize(self):
        return len(self.items)
    
    def empty(self):
        return len(self.items) == 0
    
    def get_nowait(self):
        if self.items:
            return self.items.pop(0)
        raise Exception("Queue empty")
    
    def clear(self):
        self.items.clear()

class MockStateManager:
    """–ú–æ–∫ StateManager –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.grpc_client = MockGrpcClient()
        self.audio_player = self.grpc_client.audio_player
        self.state = "IN_PROCESS"
        self.interrupt_called = False
        
    def _force_stop_grpc_stream(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ gRPC —Å—Ç—Ä–∏–º–∞"""
        console.print("\nüö® –¢–µ—Å—Ç–∏—Ä—É—é _force_stop_grpc_stream()...")
        
        try:
            # 1Ô∏è‚É£ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º gRPC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            if hasattr(self, 'grpc_client') and self.grpc_client:
                console.print("   üö® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞—é gRPC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...")
                
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                if hasattr(self.grpc_client, 'close_connection'):
                    self.grpc_client.close_connection()
                    console.print("   ‚úÖ gRPC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ")
                elif hasattr(self.grpc_client, 'channel'):
                    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª
                    try:
                        self.grpc_client.channel = None
                        console.print("   ‚úÖ gRPC –∫–∞–Ω–∞–ª –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç")
                    except Exception as e:
                        console.print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è gRPC –∫–∞–Ω–∞–ª–∞: {e}")
                
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
                if hasattr(self.grpc_client, 'reset_state'):
                    self.grpc_client.reset_state()
                    console.print("   ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ gRPC –∫–ª–∏–µ–Ω—Ç–∞ —Å–±—Ä–æ—à–µ–Ω–æ")
                
            # 2Ô∏è‚É£ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –≤—Å–µ –±—É—Ñ–µ—Ä—ã
            if hasattr(self, 'audio_player') and self.audio_player:
                console.print("   üö® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞—é –≤—Å–µ –∞—É–¥–∏–æ –±—É—Ñ–µ—Ä—ã...")
                
                # –û—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å
                if hasattr(self.audio_player, 'audio_queue'):
                    queue_size = self.audio_player.audio_queue.qsize()
                    console.print(f"   üìä –û—á–∏—â–∞—é –æ—á–µ—Ä–µ–¥—å: {queue_size} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                    
                    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å
                    while not self.audio_player.audio_queue.empty():
                        try:
                            self.audio_player.audio_queue.get_nowait()
                        except:
                            break
                    
                    console.print("   ‚úÖ –û—á–µ—Ä–µ–¥—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–µ–Ω–∞")
                
                # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
                if hasattr(self.audio_player, 'force_stop'):
                    self.audio_player.force_stop()
                    console.print("   ‚úÖ –ê—É–¥–∏–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
                elif hasattr(self.audio_player, 'stop'):
                    self.audio_player.stop()
                    console.print("   ‚úÖ –ê—É–¥–∏–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
                
                # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä—ã
                if hasattr(self.audio_player, 'clear_all_audio_data'):
                    self.audio_player.clear_all_audio_data()
                    console.print("   ‚úÖ –í—Å–µ –∞—É–¥–∏–æ –±—É—Ñ–µ—Ä—ã –æ—á–∏—â–µ–Ω—ã")
            
            console.print("   ‚úÖ _force_stop_grpc_stream –∑–∞–≤–µ—Ä—à–µ–Ω")
            
        except Exception as e:
            console.print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ _force_stop_grpc_stream: {e}")
    
    async def _cancel_tasks(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –æ—Ç–º–µ–Ω—ã –∑–∞–¥–∞—á"""
        console.print("\nüö® –¢–µ—Å—Ç–∏—Ä—É—é _cancel_tasks()...")
        
        start_time = time.time()
        
        # 1Ô∏è‚É£ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –û–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú gRPC –°–¢–†–ò–ú
        grpc_start = time.time()
        self._force_stop_grpc_stream()
        grpc_time = (time.time() - grpc_start) * 1000
        console.print(f"   ‚úÖ _force_stop_grpc_stream: {grpc_time:.1f}ms")
        
        # 2Ô∏è‚É£ –û—Ç–º–µ–Ω—è–µ–º asyncio –∑–∞–¥–∞—á–∏ (–º–æ–∫)
        tasks_start = time.time()
        console.print("   üö® –û—Ç–º–µ–Ω—è—é asyncio –∑–∞–¥–∞—á–∏...")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–º–µ–Ω—É –∑–∞–¥–∞—á
        await asyncio.sleep(0.01)  # –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ—Ç–º–µ–Ω—ã
        
        tasks_time = (time.time() - tasks_start) * 1000
        console.print(f"   ‚úÖ –û—Ç–º–µ–Ω–∞ –∑–∞–¥–∞—á –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {tasks_time:.1f}ms")
        
        # 3Ô∏è‚É£ –û—á–∏—â–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∑–∞–¥–∞—á–∏
        console.print("   üîÑ –û—á–∏—â–∞—é —Å—Å—ã–ª–∫–∏ –Ω–∞ –∑–∞–¥–∞—á–∏...")
        
        total_time = (time.time() - start_time) * 1000
        console.print(f"   ‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è _cancel_tasks: {total_time:.1f}ms")
    
    async def test_interruption_flow(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø–æ—Ç–æ–∫ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
        console.print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–ª–Ω—ã–π –ø–æ—Ç–æ–∫ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è...")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ
        console.print("üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –ø—Ä–æ–±–µ–ª...")
        
        # 1Ô∏è‚É£ –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á–∏
        await self._cancel_tasks()
        
        # 2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        console.print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        console.print(f"   üîå gRPC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ: {self.grpc_client.connection_closed}")
        console.print(f"   üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ gRPC —Å–±—Ä–æ—à–µ–Ω–æ: {self.grpc_client.state_reset}")
        console.print(f"   üßπ –ê—É–¥–∏–æ –±—É—Ñ–µ—Ä—ã –æ—á–∏—â–µ–Ω—ã: {self.audio_player.cleared}")
        console.print(f"   ‚èπÔ∏è –ê—É–¥–∏–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {self.audio_player.stopped}")
        console.print(f"   üì¶ –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞: {self.audio_player.audio_queue.empty()}")
        
        # 3Ô∏è‚É£ –û—Ü–µ–Ω–∫–∞
        success = all([
            self.grpc_client.connection_closed,
            self.grpc_client.state_reset,
            self.audio_player.cleared,
            self.audio_player.stopped,
            self.audio_player.audio_queue.empty()
        ])
        
        if success:
            console.print("\nüéØ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
            console.print("‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ gRPC —Å—Ç—Ä–∏–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            console.print("\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò!")
            console.print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    console.print("üöÄ –¢–µ—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ gRPC —Å—Ç—Ä–∏–º–∞")
    console.print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫ StateManager
    state_manager = MockStateManager()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    await state_manager.test_interruption_flow()
    
    console.print("\n" + "=" * 50)
    console.print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        console.print("\nÔøΩÔøΩ –í—ã—Ö–æ–¥ –∏–∑ —Ç–µ—Å—Ç–∞.")
