"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —É–ø–∞–∫–æ–≤–∫–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ –ø–æ—Ä—è–¥–∫—É:
1. PyObjC Fix (NSMakeRect –ø—Ä–æ–±–ª–µ–º–∞)
2. Resource Paths (–ø—É—Ç–∏ –∫ —Ä–µ—Å—É—Ä—Å–∞–º)
3. Packaged Simulation (—Å–∏–º—É–ª—è—Ü–∏—è .app)
4. Welcome Player Integration (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç)
"""

import sys
import asyncio
from pathlib import Path
import subprocess

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
CLIENT_ROOT = Path(__file__).parent
sys.path.insert(0, str(CLIENT_ROOT))
sys.path.insert(0, str(CLIENT_ROOT / "modules"))
sys.path.insert(0, str(CLIENT_ROOT / "integration"))

def print_section(title, icon="üß™"):
    """–ü–µ—á–∞—Ç–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Å–µ–∫—Ü–∏–∏"""
    print("\n" + "=" * 80)
    print(f"{icon} {title}")
    print("=" * 80)

def run_test_script(script_name, description):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"\n‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫: {description}")
    print("-" * 80)
    
    script_path = CLIENT_ROOT / script_name
    
    if not script_path.exists():
        print(f"‚ùå –°–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {script_path}")
        return False
    
    try:
        result = subprocess.run(
            [sys.executable, str(script_path)],
            capture_output=True,
            text=True,
            timeout=30
        )
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(result.stdout)
        if result.stderr:
            print("STDERR:", result.stderr)
        
        success = result.returncode == 0
        if success:
            print(f"‚úÖ {description} - PASS")
        else:
            print(f"‚ùå {description} - FAIL (exit code: {result.returncode})")
        
        return success
        
    except subprocess.TimeoutExpired:
        print(f"‚ùå {description} - TIMEOUT (>30s)")
        return False
    except Exception as e:
        print(f"‚ùå {description} - ERROR: {e}")
        return False

async def test_welcome_player_integration():
    """–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç Welcome Player —Å –Ω–∞—Å—Ç–æ—è—â–µ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –∞—É–¥–∏–æ"""
    print_section("–¢–ï–°–¢ 5: Welcome Player Integration", "üéµ")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from modules.welcome_message.core.types import WelcomeConfig
        from modules.welcome_message.core.welcome_player import WelcomePlayer
        
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ server-only –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        config = WelcomeConfig()
        print(f"   ‚Ä¢ enabled: {config.enabled}")
        print(f"   ‚Ä¢ use_server: {config.use_server}")
        if not config.use_server:
            print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è")
            return False

        print("\nüéµ –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (use_server=False)...")
        config_disabled = WelcomeConfig(
            enabled=True,
            text=config.text,
            delay_sec=config.delay_sec,
            volume=config.volume,
            voice=config.voice,
            sample_rate=config.sample_rate,
            channels=config.channels,
            bit_depth=config.bit_depth,
            use_server=False,
            server_timeout_sec=config.server_timeout_sec,
        )

        player = WelcomePlayer(config_disabled)
        result = await player.play_welcome()

        print(f"   ‚Ä¢ success: {result.success}")
        print(f"   ‚Ä¢ method: {result.method}")
        print(f"   ‚Ä¢ error: {result.error}")

        if result.success or result.method != "none":
            print("‚ùå –ü–ª–µ–µ—Ä –Ω–µ –¥–æ–ª–∂–µ–Ω –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞")
            return False

        if not result.error:
            print("‚ùå –û–∂–∏–¥–∞–ª–æ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞")
            return False

        print("\n‚úÖ Welcome Player Integration (server-only check) - PASS")
        return True
        
    except Exception as e:
        print(f"\n‚ùå Welcome Player Integration - FAIL")
        print(f"   –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_ffmpeg_availability():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å ffmpeg –¥–ª—è pydub"""
    print_section("–¢–ï–°–¢ 6: FFmpeg Availability", "üé¨")
    
    try:
        from pydub import AudioSegment
        import os
        
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ ffmpeg...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
        ffmpeg_binary = os.environ.get("FFMPEG_BINARY")
        if ffmpeg_binary:
            print(f"   ‚Ä¢ FFMPEG_BINARY env: {ffmpeg_binary}")
            print(f"   ‚Ä¢ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {Path(ffmpeg_binary).exists()}")
        else:
            print("   ‚Ä¢ FFMPEG_BINARY env: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º converter –≤ AudioSegment
        if hasattr(AudioSegment, "converter"):
            print(f"   ‚Ä¢ AudioSegment.converter: {AudioSegment.converter}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞—É–¥–∏–æ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        test_audio_path = CLIENT_ROOT / "test_audio_temp.wav"
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∞—É–¥–∏–æ —Ñ–∞–π–ª
        from pydub.generators import Sine
        test_audio = Sine(440).to_audio_segment(duration=1000)  # 1 —Å–µ–∫—É–Ω–¥–∞ 440Hz
        test_audio.export(str(test_audio_path), format="wav")
        
        print(f"\nüéµ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å: {test_audio_path.name}")
        
        audio = AudioSegment.from_file(str(test_audio_path))
        
        print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
        print(f"   ‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {len(audio) / 1000:.2f} —Å–µ–∫")
        print(f"   ‚Ä¢ Sample rate: {audio.frame_rate} Hz")
        print(f"   ‚Ä¢ –ö–∞–Ω–∞–ª—ã: {audio.channels}")
        print(f"   ‚Ä¢ Sample width: {audio.sample_width} bytes")
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        test_audio_path.unlink()
        
        return True
        
    except Exception as e:
        print(f"‚ùå FFmpeg Availability - FAIL")
        print(f"   –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã"""
    print_section("–ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ï–†–ï–î –£–ü–ê–ö–û–í–ö–û–ô", "üöÄ")
    print("\n–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã")
    print("–ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π —É–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n")
    
    results = {}
    
    # –¢–µ—Å—Ç 1: PyObjC Fix
    results['pyobjc_fix'] = run_test_script(
        'test_pyobjc_fix.py',
        'PyObjC Fix (NSMakeRect)'
    )
    
    # –¢–µ—Å—Ç 2: Resource Paths
    results['resource_paths'] = run_test_script(
        'test_resource_path.py',
        'Resource Paths'
    )
    
    # –¢–µ—Å—Ç 3: Packaged Simulation
    results['packaged_simulation'] = run_test_script(
        'test_packaged_simulation.py',
        'Packaged Simulation'
    )
    
    # –¢–µ—Å—Ç 4: FFmpeg
    results['ffmpeg'] = test_ffmpeg_availability()
    
    # –¢–µ—Å—Ç 5: Welcome Player Integration
    try:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        results['welcome_player'] = loop.run_until_complete(
            test_welcome_player_integration()
        )
        loop.close()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ Welcome Player Integration: {e}")
        results['welcome_player'] = False
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
    print_section("–ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê", "üìä")
    
    print("\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:")
    print("-" * 80)
    
    all_passed = True
    for test_name, success in results.items():
        status = "‚úÖ PASS" if success else "‚ùå FAIL"
        test_display = test_name.replace('_', ' ').title()
        print(f"   {status} - {test_display}")
        if not success:
            all_passed = False
    
    print("-" * 80)
    
    if all_passed:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("\n‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —É–ø–∞–∫–æ–≤–∫–µ:")
        print("   cd /Users/sergiyzasorin/Development/Nexy/client")
        print("   ./packaging/build_final.sh")
        print("\nüí° –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ .pkg –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   1. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (–Ω–µ—Ç –æ—à–∏–±–∫–∏ NSMakeRect)")
        print("   2. –ó–≤—É–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: tail -f ~/Library/Logs/Nexy/nexy.log")
        
    else:
        print("\n‚ö†Ô∏è  –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´!")
        print("\n‚ùå –ù–ï —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ø–∞–∫–æ–≤—ã–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        print("\nüí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã —Å–Ω–æ–≤–∞:")
        print("   python3 test_all_before_packaging.py")
    
    print("\n" + "=" * 80)
    
    return 0 if all_passed else 1

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)

