"""
–¢–µ—Å—Ç PyObjC Fix –¥–ª—è NSMakeRect –ø—Ä–æ–±–ª–µ–º—ã
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ (—Ç–µ—Å—Ç—ã —Ç–µ–ø–µ—Ä—å –≤ tests/)
CLIENT_ROOT = Path(__file__).parent.parent
sys.path.insert(0, str(CLIENT_ROOT))
sys.path.insert(0, str(CLIENT_ROOT / "integration"))

print("=" * 80)
print("üß™ –¢–ï–°–¢ PyObjC FIX –î–õ–Ø NSMakeRect")
print("=" * 80)

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –î–û —Ñ–∏–∫—Å–∞
print("\n1Ô∏è‚É£ –°–æ—Å—Ç–æ—è–Ω–∏–µ –î–û –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–∫—Å–∞:")
print("-" * 80)

try:
    import Foundation
    print("‚úì Foundation –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    has_nsmake_rect_before = hasattr(Foundation, "NSMakeRect")
    print(f"  NSMakeRect –≤ Foundation: {has_nsmake_rect_before}")
    
    if has_nsmake_rect_before:
        print("  ‚ÑπÔ∏è  NSMakeRect —É–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, AppKit –∑–∞–≥—Ä—É–∂–µ–Ω —Ä–∞–Ω—å—à–µ)")
    
except ImportError as e:
    print(f"‚úó –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Foundation: {e}")
    sys.exit(1)

try:
    import AppKit
    print("‚úì AppKit –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    has_in_appkit = hasattr(AppKit, "NSMakeRect")
    print(f"  NSMakeRect –≤ AppKit: {has_in_appkit}")
    
except ImportError as e:
    print(f"‚úó –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ AppKit: {e}")
    sys.exit(1)

# 2. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–∫—Å–∞
print("\n2Ô∏è‚É£ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–∫—Å–∞:")
print("-" * 80)

try:
    from integration.utils.macos_pyobjc_fix import fix_pyobjc_foundation
    fix_pyobjc_foundation()
    print("‚úì fix_pyobjc_foundation() –≤—ã–ø–æ–ª–Ω–µ–Ω")
except Exception as e:
    print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–∫—Å–∞: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ü–û–°–õ–ï —Ñ–∏–∫—Å–∞
print("\n3Ô∏è‚É£ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ü–û–°–õ–ï –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–∫—Å–∞:")
print("-" * 80)

has_nsmake_rect_after = hasattr(Foundation, "NSMakeRect")
print(f"  NSMakeRect –≤ Foundation: {has_nsmake_rect_after}")

if has_nsmake_rect_after:
    print("  ‚úÖ NSMakeRect —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Foundation!")
else:
    print("  ‚ùå NSMakeRect –≤—Å—ë –µ—â—ë –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ Foundation!")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ —Å–∏–º–≤–æ–ª—ã
other_symbols = ["NSMakePoint", "NSMakeSize", "NSMakeRange"]
print("\n  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã:")
all_symbols_ok = True
for symbol in other_symbols:
    has_it = hasattr(Foundation, symbol)
    status = "‚úì" if has_it else "‚úó"
    print(f"    {status} {symbol}: {has_it}")
    if not has_it:
        all_symbols_ok = False

# 4. –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ rumps
print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ rumps:")
print("-" * 80)

try:
    import rumps
    print("‚úì rumps —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–±–µ–∑ –∑–∞–ø—É—Å–∫–∞)
    class TestApp(rumps.App):
        def __init__(self):
            super(TestApp, self).__init__("Test", quit_button=None)
    
    test_app = TestApp()
    print("‚úì –¢–µ—Å—Ç–æ–≤–æ–µ rumps.App —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    
except ImportError as e:
    print(f"‚ö†Ô∏è  rumps –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {e}")
    print("  (–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ rumps –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ development)")
    
except Exception as e:
    print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å rumps: {e}")
    import traceback
    traceback.print_exc()

# 5. –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
print("\n" + "=" * 80)
print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê")
print("=" * 80)

if has_nsmake_rect_after and all_symbols_ok:
    print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
    print("\nüí° –§–∏–∫—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:")
    print("   cd /Users/sergiyzasorin/Development/Nexy/client")
    print("   ./packaging/build_final.sh")
    exit_code = 0
else:
    print("‚ö†Ô∏è  –ï–°–¢–¨ –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø")
    print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π")
    exit_code = 1

print("=" * 80)

sys.exit(exit_code)





